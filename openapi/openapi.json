{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Figshare API",
    "description" : "Figshare apiv2. Using Swagger 2.0",
    "version" : "2.0.0"
  },
  "servers" : [ {
    "url" : "https://api.figinternal.dev/v2"
  } ],
  "paths" : {
    "/articles" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Public Articles",
        "description" : "Returns a list of public articles",
        "operationId" : "articles_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The field by which to order. Default varies by endpoint/resource.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "downloads", "cites" ]
          }
        }, {
          "name" : "order_direction",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "institution",
          "in" : "query",
          "description" : "only return articles from this institution",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "published_since",
          "in" : "query",
          "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modified_since",
          "in" : "query",
          "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "only return articles from this group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "resource_doi",
          "in" : "query",
          "description" : "only return articles with this resource_doi",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "item_type",
          "in" : "query",
          "description" : "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "doi",
          "in" : "query",
          "description" : "only return articles with this doi",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "handle",
          "in" : "query",
          "description" : "only return articles with this handle",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity. Syntax is correct but one of the parameters isn't correctly processed",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/articles/search" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Public Articles Search",
        "description" : "Returns a list of public articles, filtered by the search parameters",
        "operationId" : "articles_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleSearch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity. Syntax is correct but one of the parameters isn't correctly processed",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "search"
      }
    },
    "/articles/{article_id}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "View article details",
        "description" : "View an article",
        "operationId" : "article_details",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleComplete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Article"
      }
    },
    "/articles/{article_id}/versions" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "List article versions",
        "description" : "List public article versions",
        "operationId" : "article_versions",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article version representations",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ArticleVersions"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request. Article ID must be an integer and bigger than 0.",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Article"
      }
    },
    "/articles/{article_id}/versions/{v_number}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Article details for version",
        "description" : "Article with specified version",
        "operationId" : "article_version_details",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "v_number",
          "in" : "path",
          "description" : "Article Version Number",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleComplete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Article"
      }
    },
    "/articles/{article_id}/versions/{v_number}/embargo" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Public Article Embargo for article version",
        "description" : "Embargo for article version",
        "operationId" : "article_version_embargo",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "v_number",
          "in" : "path",
          "description" : "Version Number",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Embargo representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleEmbargo"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/articles/{article_id}/versions/{v_number}/confidentiality" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Public Article Confidentiality for article version",
        "description" : "Confidentiality for article version. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
        "operationId" : "article_version_confidentiality",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "v_number",
          "in" : "path",
          "description" : "Version Number",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Confidentiality representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleConfidentiality"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/articles/{article_id}/files" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "List article files",
        "description" : "Files list for article",
        "operationId" : "article_files",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. List of article files",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PublicFile"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Article files"
      }
    },
    "/articles/{article_id}/files/{file_id}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Article file details",
        "description" : "File by id",
        "operationId" : "article_file_details",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "file_id",
          "in" : "path",
          "description" : "File Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. File representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PublicFile"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Article files"
      }
    },
    "/account/articles/search" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Private Articles search",
        "description" : "Returns a list of private articles filtered by the search parameters",
        "operationId" : "private_articles_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateArticleSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "search"
      }
    },
    "/account/articles" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Private Articles",
        "description" : "Get Own Articles",
        "operationId" : "private_articles_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles belonging to the account",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Create new Article",
        "description" : "Create a new Article by sending article information",
        "operationId" : "private_article_create",
        "requestBody" : {
          "description" : "Article description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationWarnings"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article",
        "x-codegen-request-body-name" : "Article"
      }
    },
    "/account/articles/{article_id}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Article details",
        "description" : "View a private article",
        "operationId" : "private_article_details",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleCompletePrivate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article"
      },
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Update article",
        "description" : "Updating an article by passing body parameters; request can also be made with the PATCH method.",
        "operationId" : "private_article_update",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Article description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of newly created article",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationWarnings"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article",
        "x-codegen-request-body-name" : "Article"
      },
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Delete article",
        "description" : "Delete an article",
        "operationId" : "private_article_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article"
      }
    },
    "/account/articles/{article_id}/embargo" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Article Embargo Details",
        "description" : "View a private article embargo details",
        "operationId" : "private_article_embargo_details",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Embargo for article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleEmbargo"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Embargo"
      },
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Update Article Embargo",
        "description" : "Note: setting an article under whole embargo does not imply that the article will be published when the embargo will expire. You must explicitly call the publish endpoint to enable this functionality.",
        "operationId" : "private_article_embargo_update",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Embargo description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleEmbargoUpdater"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of embargo",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Embargo",
        "x-codegen-request-body-name" : "Embargo"
      },
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Delete Article Embargo",
        "description" : "Will lift the embargo for the specified article",
        "operationId" : "private_article_embargo_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Embargo"
      }
    },
    "/account/articles/{article_id}/resource" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Private Article Resource",
        "description" : "Edit article resource data.",
        "operationId" : "private_article_resource",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Resource data",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Resource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location for account article details",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "Resource"
      }
    },
    "/account/articles/{article_id}/publish" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Private Article Publish",
        "description" : "- If the whole article is under embargo, it will not be published immediately, but when the embargo expires or is lifted.\n- When an article is published, a new public version will be generated. Any further updates to the article will affect the private article data. In order to make these changes publicly visible, an explicit publish operation is needed.",
        "operationId" : "private_article_publish",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location of newly published article",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/articles/{article_id}/reserve_doi" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Private Article Reserve DOI",
        "description" : "Reserve DOI for article",
        "operationId" : "private_article_reserve_doi",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleDOI"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/articles/{article_id}/reserve_handle" : {
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Private Article Reserve Handle",
        "description" : "Reserve Handle for article",
        "operationId" : "private_article_reserve_handle",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleHandle"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/articles/{article_id}/versions/{version_id}/" : {
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Update article version",
        "description" : "Updating an article version by passing body parameters; request can also be made with the PATCH method.",
        "operationId" : "article_version_update",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Article version identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Article description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of newly created article",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationWarnings"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Article version private updates",
        "x-codegen-request-body-name" : "Article"
      }
    },
    "/account/articles/{article_id}/versions/{version_id}/update_thumb" : {
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Update article version thumbnail",
        "description" : "For a given public article version update the article thumbnail by choosing one of the associated files",
        "operationId" : "article_version_update_thumb",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Article version identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "File ID",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileId"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location for article version details",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Article version private updates",
        "x-codegen-request-body-name" : "FileId"
      }
    },
    "/account/articles/{article_id}/authors" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "List article authors",
        "description" : "List article authors",
        "operationId" : "private_article_authors_list",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Authors list for article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Author"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Authors"
      },
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Replace article authors",
        "description" : "Associate new authors with the article. This will remove all already associated authors and add these new ones",
        "operationId" : "private_article_authors_replace",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Authors description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorsCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of authors",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request. Article ID must be an integer and bigger than 0. Author with ID Not Found.",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Authors",
        "x-codegen-request-body-name" : "Authors"
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Add article authors",
        "description" : "Associate new authors with the article. This will add new authors to the list of already associated authors",
        "operationId" : "private_article_authors_add",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Authors description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorsCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of authors",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Authors",
        "x-codegen-request-body-name" : "Authors"
      }
    },
    "/account/articles/{article_id}/authors/{author_id}" : {
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Delete article author",
        "description" : "De-associate author from article",
        "operationId" : "private_article_author_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "author_id",
          "in" : "path",
          "description" : "Article Author unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Authors"
      }
    },
    "/account/articles/{article_id}/categories" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "List article categories",
        "description" : "List article categories",
        "operationId" : "private_article_categories_list",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Categories"
      },
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Replace article categories",
        "description" : "Associate new categories with the article. This will remove all already associated categories and add these new ones",
        "operationId" : "private_article_categories_replace",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoriesCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Categories",
        "x-codegen-request-body-name" : "categories"
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Add article categories",
        "description" : "Associate new categories with the article. This will add new categories to the list of already associated categories",
        "operationId" : "private_article_categories_add",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoriesCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Categories",
        "x-codegen-request-body-name" : "categories"
      }
    },
    "/account/articles/{article_id}/categories/{category_id}" : {
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Delete article category",
        "description" : "De-associate category from article",
        "operationId" : "private_article_category_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "category_id",
          "in" : "path",
          "description" : "Category unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Categories"
      }
    },
    "/account/articles/{article_id}/confidentiality" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Article confidentiality details",
        "description" : "View confidentiality settings. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
        "operationId" : "private_article_confidentiality_details",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArticleConfidentiality"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Confidentiality - DEPRECATED"
      },
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Update article confidentiality",
        "description" : "Update confidentiality settings. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
        "operationId" : "private_article_confidentiality_update",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ConfidentialityCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Confidentiality - DEPRECATED",
        "x-codegen-request-body-name" : "reason"
      },
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Delete article confidentiality",
        "description" : "Delete confidentiality settings. The confidentiality feature is now deprecated. This has been replaced by the new extended embargo functionality and all items that used to be confidential have now been migrated to items with a permanent embargo on files. All API endpoints related to this functionality will remain for backwards compatibility, but will now be attached to the new extended embargo workflows.",
        "operationId" : "private_article_confidentiality_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Confidentiality - DEPRECATED"
      }
    },
    "/account/articles/{article_id}/private_links" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "List private links",
        "description" : "List private links",
        "operationId" : "private_article_private_link",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article private links",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrivateLink"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Private Links"
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Create private link",
        "description" : "Create new private link for this article",
        "operationId" : "private_article_private_link_create",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateLinkCreator"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location of private link",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Private Links",
        "x-codegen-request-body-name" : "private_link"
      }
    },
    "/account/articles/{article_id}/private_links/{link_id}" : {
      "put" : {
        "tags" : [ "articles" ],
        "summary" : "Update private link",
        "description" : "Update existing private link for this article",
        "operationId" : "private_article_private_link_update",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "link_id",
          "in" : "path",
          "description" : "Private link token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateLinkCreator"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of private link",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Private Links",
        "x-codegen-request-body-name" : "private_link"
      },
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "Disable private link",
        "description" : "Disable/delete private link for this article",
        "operationId" : "private_article_private_link_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "link_id",
          "in" : "path",
          "description" : "Private link token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Private Links"
      }
    },
    "/account/articles/{article_id}/files" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "List article files",
        "description" : "List private files",
        "operationId" : "private_article_files_list",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article files list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrivateFile"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Files"
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Initiate Upload",
        "description" : "Initiate a new file upload within the article. Either use the link property to point to an existing file that resides elsewhere and will not be uploaded to Figshare or use the other 3 parameters (md5, name, size).",
        "operationId" : "private_article_upload_initiate",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/FileCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location of new file",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity. Parameters missing or incorrect",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Files",
        "x-codegen-request-body-name" : "File"
      }
    },
    "/account/articles/{article_id}/files/{file_id}" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Single File",
        "description" : "View details of file for specified article",
        "operationId" : "private_article_file",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "file_id",
          "in" : "path",
          "description" : "File unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article private file",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateFile"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Files"
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Complete Upload",
        "description" : "Complete file upload",
        "operationId" : "private_article_upload_complete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "file_id",
          "in" : "path",
          "description" : "File unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Accepted",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Files"
      },
      "delete" : {
        "tags" : [ "articles" ],
        "summary" : "File Delete",
        "description" : "Complete file upload",
        "operationId" : "private_article_file_delete",
        "parameters" : [ {
          "name" : "article_id",
          "in" : "path",
          "description" : "Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "file_id",
          "in" : "path",
          "description" : "File unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Article Files"
      }
    },
    "/account/articles/export" : {
      "get" : {
        "tags" : [ "articles" ],
        "summary" : "Account Article Report",
        "description" : "Return status on all reports generated for the account from the oauth credentials",
        "operationId" : "account_article_report",
        "parameters" : [ {
          "name" : "group_id",
          "in" : "query",
          "description" : "A group ID to filter by",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of account report entries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AccountReport"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "articles" ],
        "summary" : "Initiate a new Report",
        "description" : "Initiate a new Article Report for this Account",
        "operationId" : "account_article_report_generate",
        "responses" : {
          "200" : {
            "description" : "OK. AccountReport created.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountReport"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/collections" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Public Collections",
        "description" : "Returns a list of public collections",
        "operationId" : "collections_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The field by which to order. Default varies by endpoint/resource.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "cites" ]
          }
        }, {
          "name" : "order_direction",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "institution",
          "in" : "query",
          "description" : "only return collections from this institution",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "published_since",
          "in" : "query",
          "description" : "Filter by collection publishing date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modified_since",
          "in" : "query",
          "description" : "Filter by collection modified date. Will only return collections published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "only return collections from this group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "resource_doi",
          "in" : "query",
          "description" : "only return collections with this resource_doi",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "doi",
          "in" : "query",
          "description" : "only return collections with this doi",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "handle",
          "in" : "query",
          "description" : "only return collections with this handle",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of collections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Collection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/collections/search" : {
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Public Collections Search",
        "description" : "Returns a list of public collections",
        "operationId" : "collections_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollectionSearch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of collections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Collection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "search"
      }
    },
    "/collections/{collection_id}" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Collection details",
        "description" : "View a collection",
        "operationId" : "collection_details",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Collection representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionComplete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Collection"
      }
    },
    "/collections/{collection_id}/versions" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Collection Versions list",
        "description" : "Returns a list of public collection Versions",
        "operationId" : "collection_versions",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of versions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CollectionVersions"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Collection"
      }
    },
    "/collections/{collection_id}/versions/{version_id}" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Collection Version details",
        "description" : "View details for a certain version of a collection",
        "operationId" : "collection_version_details",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Version Number",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Collection for that version",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionComplete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-subcategory" : "Public Collection"
      }
    },
    "/collections/{collection_id}/articles" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Public Collection Articles",
        "description" : "Returns a list of public collection articles",
        "operationId" : "collection_articles",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles belonging to the collection",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "422" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/account/collections" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Private Collections List",
        "description" : "List private collections",
        "operationId" : "private_collections_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The field by which to order. Default varies by endpoint/resource.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "cites" ]
          }
        }, {
          "name" : "order_direction",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of collections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Collection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Create collection",
        "description" : "Create a new Collection by sending collection information",
        "operationId" : "private_collection_create",
        "requestBody" : {
          "description" : "Collection description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollectionCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationWarnings"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection",
        "x-codegen-request-body-name" : "Collection"
      }
    },
    "/account/collections/{collection_id}" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "Collection details",
        "description" : "View a collection",
        "operationId" : "private_collection_details",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Collection representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionCompletePrivate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection"
      },
      "put" : {
        "tags" : [ "collections" ],
        "summary" : "Update collection",
        "description" : "Update collection details; request can also be made with the PATCH method.",
        "operationId" : "private_collection_update",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Collection description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollectionUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of collection",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationWarnings"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection",
        "x-codegen-request-body-name" : "Collection"
      },
      "delete" : {
        "tags" : [ "collections" ],
        "summary" : "Delete collection",
        "description" : "Delete n collection",
        "operationId" : "private_collection_delete",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection"
      }
    },
    "/account/collections/search" : {
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Private Collections Search",
        "description" : "Returns a list of private Collections",
        "operationId" : "private_collections_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateCollectionSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of collections",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Collection"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "search"
      }
    },
    "/account/collections/{collection_id}/reserve_doi" : {
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Private Collection Reserve DOI",
        "description" : "Reserve DOI for collection",
        "operationId" : "private_collection_reserve_doi",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionDOI"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/collections/{collection_id}/reserve_handle" : {
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Private Collection Reserve Handle",
        "description" : "Reserve Handle for collection",
        "operationId" : "private_collection_reserve_handle",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CollectionHandle"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/collections/{collection_id}/resource" : {
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Private Collection Resource",
        "description" : "Edit collection resource data.",
        "operationId" : "private_collection_resource",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Resource data",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/Resource"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location for account collection details",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "Resource"
      }
    },
    "/account/collections/{collection_id}/publish" : {
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Private Collection Publish",
        "description" : "When a collection is published, a new public version will be generated. Any further updates to the collection will affect the private collection data. In order to make these changes publicly visible, an explicit publish operation is needed.",
        "operationId" : "private_collection_publish",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location of collection",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/collections/{collection_id}/authors" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "List collection authors",
        "description" : "List collection authors",
        "operationId" : "private_collection_authors_list",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Embargo for article",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Author"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Authors"
      },
      "put" : {
        "tags" : [ "collections" ],
        "summary" : "Replace collection authors",
        "description" : "Associate new authors with the collection. This will remove all already associated authors and add these new ones",
        "operationId" : "private_collection_authors_replace",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "List of authors",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorsCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of authors",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Authors",
        "x-codegen-request-body-name" : "Authors"
      },
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Add collection authors",
        "description" : "Associate new authors with the collection. This will add new authors to the list of already associated authors",
        "operationId" : "private_collection_authors_add",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "List of authors",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AuthorsCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of authors",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Authors",
        "x-codegen-request-body-name" : "Authors"
      }
    },
    "/account/collections/{collection_id}/authors/{author_id}" : {
      "delete" : {
        "tags" : [ "collections" ],
        "summary" : "Delete collection author",
        "description" : "Delete collection author",
        "operationId" : "private_collection_author_delete",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "author_id",
          "in" : "path",
          "description" : "Collection Author unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Authors"
      }
    },
    "/account/collections/{collection_id}/categories" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "List collection categories",
        "description" : "List collection categories",
        "operationId" : "private_collection_categories_list",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Categories list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Categories"
      },
      "put" : {
        "tags" : [ "collections" ],
        "summary" : "Replace collection categories",
        "description" : "Associate new categories with the collection. This will remove all already associated categories and add these new ones",
        "operationId" : "private_collection_categories_replace",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Categories list",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoriesCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of categories",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Categories",
        "x-codegen-request-body-name" : "categories"
      },
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Add collection categories",
        "description" : "Associate new categories with the collection. This will add new categories to the list of already associated categories",
        "operationId" : "private_collection_categories_add",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Categories list",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CategoriesCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of categories",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Categories",
        "x-codegen-request-body-name" : "categories"
      }
    },
    "/account/collections/{collection_id}/categories/{category_id}" : {
      "delete" : {
        "tags" : [ "collections" ],
        "summary" : "Delete collection category",
        "description" : "De-associate category from collection",
        "operationId" : "private_collection_category_delete",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "category_id",
          "in" : "path",
          "description" : "Collection category unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Categories"
      }
    },
    "/account/collections/{collection_id}/articles" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "List collection articles",
        "description" : "List collection articles",
        "operationId" : "private_collection_articles_list",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Articles List",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Articles"
      },
      "put" : {
        "tags" : [ "collections" ],
        "summary" : "Replace collection articles",
        "description" : "Associate new articles with the collection. This will remove all already associated articles and add these new ones",
        "operationId" : "private_collection_articles_replace",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Articles List",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticlesCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of list of articles",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Articles",
        "x-codegen-request-body-name" : "articles"
      },
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Add collection articles",
        "description" : "Associate new articles with the collection. This will add new articles to the list of already associated articles",
        "operationId" : "private_collection_articles_add",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Articles list",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticlesCreator"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of new articles",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Articles",
        "x-codegen-request-body-name" : "articles"
      }
    },
    "/account/collections/{collection_id}/articles/{article_id}" : {
      "delete" : {
        "tags" : [ "collections" ],
        "summary" : "Delete collection article",
        "description" : "De-associate article from collection",
        "operationId" : "private_collection_article_delete",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "article_id",
          "in" : "path",
          "description" : "Collection article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Articles"
      }
    },
    "/account/collections/{collection_id}/private_links" : {
      "get" : {
        "tags" : [ "collections" ],
        "summary" : "List collection private links",
        "description" : "List article private links",
        "operationId" : "private_collection_private_links_list",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Collection private links",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrivateLink"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Private Links"
      },
      "post" : {
        "tags" : [ "collections" ],
        "summary" : "Create collection private link",
        "description" : "Create new private link",
        "operationId" : "private_collection_private_link_create",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollectionPrivateLinkCreator"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location of private link",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Private Links",
        "x-codegen-request-body-name" : "private_link"
      }
    },
    "/account/collections/{collection_id}/private_links/{link_id}" : {
      "put" : {
        "tags" : [ "collections" ],
        "summary" : "Update collection private link",
        "description" : "Update existing private link for this collection",
        "operationId" : "private_collection_private_link_update",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "link_id",
          "in" : "path",
          "description" : "Private link token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CollectionPrivateLinkCreator"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of new private link",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "422" : {
            "description" : "Unprocessable Entity",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Private Links",
        "x-codegen-request-body-name" : "private_link"
      },
      "delete" : {
        "tags" : [ "collections" ],
        "summary" : "Disable private link",
        "description" : "Disable/delete private link for this collection",
        "operationId" : "private_collection_private_link_delete",
        "parameters" : [ {
          "name" : "collection_id",
          "in" : "path",
          "description" : "Collection unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "link_id",
          "in" : "path",
          "description" : "Private link token",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Collection Private Links"
      }
    },
    "/item_types" : {
      "get" : {
        "tags" : [ "other" ],
        "summary" : "Item Types",
        "description" : "Returns a list of Item Types available to the authenticated user. If no user is authenticated, returns the item types available for Figshare.",
        "operationId" : "item_types_list",
        "parameters" : [ {
          "name" : "group_id",
          "in" : "query",
          "description" : "Identifier of the group for which the item types are requested",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64",
            "default" : 0
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of item types",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ItemType"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Public Projects",
        "description" : "Returns a list of public projects",
        "operationId" : "projects_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The field by which to order. Default varies by endpoint/resource.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views" ]
          }
        }, {
          "name" : "order_direction",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "institution",
          "in" : "query",
          "description" : "only return collections from this institution",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "published_since",
          "in" : "query",
          "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "only return collections from this group",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/projects/search" : {
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Public Projects Search",
        "description" : "Returns a list of public articles",
        "operationId" : "projects_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectsSearch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Project"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "search"
      }
    },
    "/projects/{project_id}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Public Project",
        "description" : "View a project",
        "operationId" : "project_details",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Project representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectComplete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/projects/{project_id}/articles" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Public Project Articles",
        "description" : "List articles in project",
        "operationId" : "project_articles",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project Unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Project articles list",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/account/projects/search" : {
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Private Projects search",
        "description" : "Search inside the private projects",
        "operationId" : "private_projects_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectsSearch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectPrivate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "422" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "x-codegen-request-body-name" : "search"
      }
    },
    "/account/projects" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Private Projects",
        "description" : "List private projects",
        "operationId" : "private_projects_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The field by which to order.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views" ]
          }
        }, {
          "name" : "order_direction",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "storage",
          "in" : "query",
          "description" : "only return collections from this institution",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "group", "individual" ]
          }
        }, {
          "name" : "roles",
          "in" : "query",
          "description" : "Any combination of owner, collaborator, viewer separated by comma. Examples: \"owner\" or \"owner,collaborator\".",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of projects",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectPrivate"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Create project",
        "description" : "Create a new project",
        "operationId" : "private_project_create",
        "requestBody" : {
          "description" : "Project  description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project",
        "x-codegen-request-body-name" : "Project"
      }
    },
    "/account/projects/{project_id}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "View project details",
        "description" : "View a private project",
        "operationId" : "private_project_details",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Project representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectCompletePrivate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project"
      },
      "put" : {
        "tags" : [ "projects" ],
        "summary" : "Update project",
        "description" : "Updating an project by passing body parameters; request can also be made with the PATCH method.",
        "operationId" : "private_project_update",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Project description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of project",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project",
        "x-codegen-request-body-name" : "Project"
      },
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "Delete project",
        "description" : "A project can be deleted only if: - it is not public - it does not have public articles.\n\nWhen an individual project is deleted, all the articles are moved to my data of each owner.\n\nWhen a group project is deleted, all the articles and files are deleted as well. Only project owner, group admin and above can delete a project.\n",
        "operationId" : "private_project_delete",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project"
      }
    },
    "/account/projects/{project_id}/publish" : {
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Private Project Publish",
        "description" : "Publish a project. Possible after all items inside it are public",
        "operationId" : "private_project_publish",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/projects/{project_id}/notes" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "List project notes",
        "description" : "List project notes",
        "operationId" : "private_project_notes_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. List of project notes",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectNote"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Notes"
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Create project note",
        "description" : "Create a new project note",
        "operationId" : "private_project_notes_create",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Note message",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectNoteCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location note",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Notes",
        "x-codegen-request-body-name" : "Note"
      }
    },
    "/account/projects/{project_id}/notes/{note_id}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Project note details",
        "operationId" : "private_project_note",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "note_id",
          "in" : "path",
          "description" : "Note unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Note representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectNotePrivate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Notes"
      },
      "put" : {
        "tags" : [ "projects" ],
        "summary" : "Update project note",
        "operationId" : "private_project_note_update",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "note_id",
          "in" : "path",
          "description" : "Note unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Note message",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectNoteCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location note",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Notes",
        "x-codegen-request-body-name" : "Note"
      },
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "Delete project note",
        "operationId" : "private_project_note_delete",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "note_id",
          "in" : "path",
          "description" : "Note unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Notes"
      }
    },
    "/account/projects/{project_id}/leave" : {
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Private Project Leave",
        "description" : "Please note: project's owner cannot leave the project.",
        "operationId" : "private_project_leave",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Collaborators"
      }
    },
    "/account/projects/{project_id}/collaborators" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "List project collaborators",
        "description" : "List Project collaborators and invited users",
        "operationId" : "private_project_collaborators_list",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. List of Collaborators",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProjectCollaborator"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Collaborators"
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Invite project collaborators",
        "description" : "Invite users to collaborate on project or view the project",
        "operationId" : "private_project_collaborators_invite",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "viewer or collaborator role. User user_id or email of user",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectCollaboratorInvite"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Collaborators",
        "x-codegen-request-body-name" : "Collaborator"
      }
    },
    "/account/projects/{project_id}/collaborators/{user_id}" : {
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "Remove project collaborator",
        "description" : "Remove project collaborator",
        "operationId" : "private_project_collaborator__Delete",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "user_id",
          "in" : "path",
          "description" : "User unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Collaborators"
      }
    },
    "/account/projects/{project_id}/articles" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "List project articles",
        "description" : "List project articles",
        "operationId" : "private_project_articles_list",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. List of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Articles"
      },
      "post" : {
        "tags" : [ "projects" ],
        "summary" : "Create project article",
        "description" : "Create a new Article and associate it with this project",
        "operationId" : "private_project_articles_create",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Article description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ArticleProjectCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "headers" : {
              "Location" : {
                "description" : "Location of article",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "url"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationWarnings"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Articles",
        "x-codegen-request-body-name" : "Article"
      }
    },
    "/account/projects/{project_id}/articles/{article_id}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Project article details",
        "description" : "Project article details",
        "operationId" : "private_project_article_details",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "article_id",
          "in" : "path",
          "description" : "Project Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectArticle"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Articles"
      },
      "delete" : {
        "tags" : [ "projects" ],
        "summary" : "Delete project article",
        "description" : "Delete project article",
        "operationId" : "private_project_article_delete",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "article_id",
          "in" : "path",
          "description" : "Project Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Articles"
      }
    },
    "/account/projects/{project_id}/articles/{article_id}/files" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Project article list files",
        "description" : "List article files",
        "operationId" : "private_project_article_files",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "article_id",
          "in" : "path",
          "description" : "Project Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. List of files",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/PrivateFile"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Articles"
      }
    },
    "/account/projects/{project_id}/articles/{article_id}/files/{file_id}" : {
      "get" : {
        "tags" : [ "projects" ],
        "summary" : "Project article file details",
        "description" : "Project article file details",
        "operationId" : "private_project_article_file",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Project unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "article_id",
          "in" : "path",
          "description" : "Project Article unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "file_id",
          "in" : "path",
          "description" : "File unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. File representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PrivateFile"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-subcategory" : "Private Project Articles"
      }
    },
    "/institutions/{institution_string_id}/articles/filter-by" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Public Licenses",
        "description" : "Returns a list of articles belonging to the institution",
        "operationId" : "institution_articles",
        "parameters" : [ {
          "name" : "institution_string_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "resource_id",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filename",
          "in" : "query",
          "required" : true,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/account/authors/search" : {
      "post" : {
        "tags" : [ "authors" ],
        "summary" : "Search Authors",
        "description" : "Search for authors",
        "operationId" : "private_authors_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/PrivateAuthorsSearch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of authors",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Author"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "search"
      }
    },
    "/account/authors/{author_id}" : {
      "get" : {
        "tags" : [ "authors" ],
        "summary" : "Author details",
        "description" : "View author details",
        "operationId" : "private_author_details",
        "parameters" : [ {
          "name" : "author_id",
          "in" : "path",
          "description" : "Author unique identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Article representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AuthorComplete"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/funding/search" : {
      "post" : {
        "tags" : [ "other" ],
        "summary" : "Search Funding",
        "description" : "Search for fundings",
        "operationId" : "private_funding_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/FundingSearch"
              }
            }
          },
          "required" : false
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of funding information",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/FundingInformation"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "search"
      }
    },
    "/account" : {
      "get" : {
        "tags" : [ "other" ],
        "summary" : "Private Account information",
        "description" : "Account information for token/personal token",
        "operationId" : "private_account",
        "responses" : {
          "200" : {
            "description" : "OK. Account representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/categories" : {
      "get" : {
        "tags" : [ "other" ],
        "summary" : "Public Categories",
        "description" : "Returns a list of public categories",
        "operationId" : "categories_list",
        "responses" : {
          "200" : {
            "description" : "OK. An array of categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/licenses" : {
      "get" : {
        "tags" : [ "other" ],
        "summary" : "Public Licenses",
        "description" : "Returns a list of public licenses",
        "operationId" : "licenses_list",
        "responses" : {
          "200" : {
            "description" : "OK. An array of licenses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/License"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    },
    "/account/licenses" : {
      "get" : {
        "tags" : [ "other" ],
        "summary" : "Private Account Licenses",
        "description" : "This is a private endpoint that requires OAuth. It will return a list with figshare public licenses AND licenses defined for account's institution.",
        "operationId" : "private_licenses_list",
        "responses" : {
          "200" : {
            "description" : "OK. An array of personal licenses",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/License"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institutions",
        "description" : "Account institution details",
        "operationId" : "private_institution_details",
        "responses" : {
          "200" : {
            "description" : "OK. An array of institutions",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Institution"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/embargo_options" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution embargo options",
        "description" : "Account institution embargo options details",
        "operationId" : "private_institution_embargo_options_details",
        "responses" : {
          "200" : {
            "description" : "OK. An array of embargo options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupEmbargoOptions"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/articles" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Institution Articles",
        "description" : "Get Articles from own institution. User must be administrator of the institution",
        "operationId" : "private_institution_articles",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The field by which to order. Default varies by endpoint/resource.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "downloads", "cites" ]
          }
        }, {
          "name" : "order_direction",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          }
        }, {
          "name" : "published_since",
          "in" : "query",
          "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "modified_since",
          "in" : "query",
          "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "only return collections with this status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "resource_doi",
          "in" : "query",
          "description" : "only return collections with this resource_doi",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "item_type",
          "in" : "query",
          "description" : "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of articles belonging to the institution",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Article"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/custom_fields" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private account institution group custom fields",
        "description" : "Returns the custom fields in the group the user belongs to, or the ones in the group specified, if the user has access.",
        "operationId" : "custom_fields_list",
        "parameters" : [ {
          "name" : "group_id",
          "in" : "query",
          "description" : "Group_id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of custom fields",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShortCustomField"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/custom_fields/{custom_field_id}/items/upload" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "Custom fields values files upload",
        "description" : "Uploads a CSV containing values for a specific custom field of type <b>dropdown_large_list</b>. More details in the <a href=\"#custom_fields\">Custom Fields section</a>",
        "operationId" : "custom_fields_upload",
        "parameters" : [ {
          "name" : "custom_field_id",
          "in" : "path",
          "description" : "Custom field identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/items_upload_body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "example" : {
                    "code" : 200,
                    "message" : "OK"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/categories" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Categories",
        "description" : "List institution categories (including parent Categories)",
        "operationId" : "private_categories_list",
        "responses" : {
          "200" : {
            "description" : "OK. An array of categories",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/groups" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution Groups",
        "description" : "Returns the groups for which the account has administrative privileges (assigned and inherited).",
        "operationId" : "private_institution_groups_list",
        "responses" : {
          "200" : {
            "description" : "OK. An array of Groups",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Group"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/groups/{group_id}/embargo_options" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution Group Embargo Options",
        "description" : "Account institution group embargo options details",
        "operationId" : "private_group_embargo_options_details",
        "parameters" : [ {
          "name" : "group_id",
          "in" : "path",
          "description" : "Group identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of embargo options",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/GroupEmbargoOptions"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/roles" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution Roles",
        "description" : "Returns the roles available for groups and the institution group.",
        "operationId" : "private_institution_roles_list",
        "responses" : {
          "200" : {
            "description" : "OK. An array of Roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/accounts" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution Accounts",
        "description" : "Returns the accounts for which the account has administrative privileges (assigned and inherited).",
        "operationId" : "private_institution_accounts_list",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "Page number. Used for pagination with page_size",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "page_size",
          "in" : "query",
          "description" : "The number of results included on a page. Used for pagination with page",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64",
            "default" : 10
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "is_active",
          "in" : "query",
          "description" : "Filter by active status",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "institution_user_id",
          "in" : "query",
          "description" : "Filter by institution_user_id",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "Filter by email",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. An array of Accounts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShortAccount"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "Create new Institution Account",
        "description" : "Create a new Account by sending account information",
        "operationId" : "private_institution_accounts_create",
        "requestBody" : {
          "description" : "Account description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "Account"
      }
    },
    "/account/institution/accounts/{account_id}" : {
      "put" : {
        "tags" : [ "institutions" ],
        "summary" : "Update Institution Account",
        "description" : "Update Institution Account",
        "operationId" : "private_institution_accounts_update",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account identifier the user is associated to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Account description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountUpdate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "205" : {
            "description" : "Reset Content",
            "headers" : {
              "Location" : {
                "description" : "Location of newly created article",
                "style" : "simple",
                "explode" : false,
                "schema" : {
                  "type" : "string",
                  "format" : "link"
                }
              }
            },
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "Account"
      }
    },
    "/account/institution/roles/{account_id}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "List Institution Account Group Roles",
        "description" : "List Institution Account Group Roles",
        "operationId" : "private_institution_account_group_roles",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account identifier the user is associated to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. Account Group Roles",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AccountGroupRoles"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "Add Institution Account Group Roles",
        "description" : "Add Institution Account Group Roles",
        "operationId" : "private_institution_account_group_roles_create",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account identifier the user is associated to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "Account description",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/AccountGroupRolesCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "Account"
      }
    },
    "/account/institution/roles/{account_id}/{group_id}/{role_id}" : {
      "delete" : {
        "tags" : [ "institutions" ],
        "summary" : "Delete Institution Account Group Role",
        "description" : "Delete Institution Account Group Role",
        "operationId" : "private_institution_account_group_role_delete",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account identifier for which to remove the role",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "group_id",
          "in" : "path",
          "description" : "Group identifier for which to remove the role",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "role_id",
          "in" : "path",
          "description" : "Role identifier",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/accounts/search" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution Accounts Search",
        "description" : "Returns the accounts for which the account has administrative privileges (assigned and inherited).",
        "operationId" : "private_institution_accounts_search",
        "requestBody" : {
          "description" : "Search Parameters",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/InstitutionAccountsSearch"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK. An array of Accounts",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ShortAccount"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "search"
      }
    },
    "/account/institution/users/{account_id}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Account Institution User",
        "description" : "Retrieve institution user information using the account_id",
        "operationId" : "private_account_institution_user",
        "parameters" : [ {
          "name" : "account_id",
          "in" : "path",
          "description" : "Account identifier the user is associated to",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. User representation",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/reviews" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Institution Curation Reviews",
        "description" : "Retrieve a list of curation reviews for this institution",
        "operationId" : "account_institution_curations",
        "parameters" : [ {
          "name" : "group_id",
          "in" : "query",
          "description" : "Filter by the group ID",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "article_id",
          "in" : "query",
          "description" : "Retrieve the reviews for this article",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Filter by the status of the review",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "pending", "approved", "rejected", "closed" ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. A list of curation reviews.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Curation"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/review/{curation_id}" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Institution Curation Review",
        "description" : "Retrieve a certain curation review by its ID",
        "operationId" : "account_institution_curation",
        "parameters" : [ {
          "name" : "curation_id",
          "in" : "path",
          "description" : "ID of the curation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. A curation review.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurationDetail"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/account/institution/review/{curation_id}/comments" : {
      "get" : {
        "tags" : [ "institutions" ],
        "summary" : "Institution Curation Review Comments",
        "description" : "Retrieve a certain curation review's comments.",
        "operationId" : "account_institution_curation_comments",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "Number of results included on a page. Used for pagination with query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "format" : "int64"
          }
        }, {
          "name" : "curation_id",
          "in" : "path",
          "description" : "ID of the curation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK. A curation review's comments.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CurationComment"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      },
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "POST Institution Curation Review Comment",
        "description" : "Add a new comment to the review.",
        "operationId" : "account_institution_curation_comments",
        "parameters" : [ {
          "name" : "curation_id",
          "in" : "path",
          "description" : "ID of the curation",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "description" : "The content/value of the comment.",
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/CurationCommentCreate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK.",
            "content" : { }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ],
        "x-codegen-request-body-name" : "CurationComment"
      }
    },
    "/institution/hrfeed/upload" : {
      "post" : {
        "tags" : [ "institutions" ],
        "summary" : "Private Institution HRfeed Upload",
        "description" : "More info in the <a href=\"#hr_feed\">HR Feed section</a>",
        "operationId" : "institution_hrfeed_upload",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "$ref" : "#/components/schemas/hrfeed_upload_body"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResponseMessage"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : { }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        },
        "security" : [ {
          "OAuth2" : [ "all" ]
        } ]
      }
    },
    "/file/download/{file_id}" : {
      "get" : {
        "tags" : [ "other" ],
        "summary" : "Public File Download",
        "description" : "Starts the download of a file",
        "operationId" : "file_download",
        "parameters" : [ {
          "name" : "file_id",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : { }
          },
          "500" : {
            "description" : "Internal Server Error",
            "content" : { }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AccountGroupRoles" : {
        "type" : "object",
        "example" : {
          "2" : [ {
            "category" : "group",
            "id" : 7,
            "name" : "User"
          } ]
        },
        "x-tag" : "institutions"
      },
      "AccountGroupRolesCreate" : {
        "type" : "object",
        "example" : {
          "2" : [ 2, 7 ],
          "3" : [ 7, 9 ]
        },
        "x-tag" : "institutions"
      },
      "Group" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Group id",
            "format" : "int64",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Group name",
            "example" : "Materials"
          },
          "resource_id" : {
            "type" : "string",
            "description" : "Group resource id",
            "example" : ""
          },
          "parent_id" : {
            "type" : "integer",
            "description" : "Parent group if any",
            "format" : "int64",
            "example" : 0
          },
          "association_criteria" : {
            "type" : "string",
            "description" : "HR code associated with group, if code exists",
            "example" : "IT"
          }
        },
        "x-tag" : "institutions"
      },
      "Role" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Role id",
            "format" : "int64",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Role name",
            "example" : "Curator"
          },
          "category" : {
            "type" : "string",
            "description" : "Role category",
            "example" : "group"
          },
          "description" : {
            "type" : "string",
            "description" : "Role description"
          }
        },
        "x-tag" : "institutions"
      },
      "GroupEmbargoOptions" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Embargo option id",
            "format" : "int64",
            "example" : 364
          },
          "type" : {
            "type" : "string",
            "description" : "Embargo permission type",
            "example" : "ip_range",
            "enum" : [ "logged_in", "ip_range", "administrator" ]
          },
          "ip_name" : {
            "type" : "string",
            "description" : "IP range name; value appears if type is ip_range",
            "example" : "Figshare IP range"
          }
        },
        "x-tag" : "institutions"
      },
      "Institution" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Institution id",
            "format" : "int64",
            "example" : 0
          },
          "name" : {
            "type" : "string",
            "description" : "Institution name",
            "example" : "Institution"
          }
        },
        "x-tag" : "institutions"
      },
      "ShortCustomField" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Custom field id",
            "format" : "int64",
            "example" : 365
          },
          "name" : {
            "type" : "string",
            "description" : "Custom field name",
            "example" : "my custom field"
          },
          "field_type" : {
            "type" : "string",
            "description" : "Custom field type",
            "example" : "textarea",
            "enum" : [ "text", "textarea", "dropdown", "url", "email", "date", "dropdown_large_list" ]
          }
        },
        "x-tag" : "institutions"
      },
      "ErrorMessage" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "description" : "A machine friendly error code, used by the dev team to identify the error.",
            "format" : "int64"
          },
          "message" : {
            "type" : "string",
            "description" : "A human friendly message explaining the error."
          }
        },
        "x-tag" : "common"
      },
      "ProjectCollaboratorInvite" : {
        "required" : [ "role_name" ],
        "type" : "object",
        "properties" : {
          "role_name" : {
            "type" : "string",
            "description" : "Role of the the collaborator inside the project",
            "example" : "viewer",
            "enum" : [ "viewer", "collaborator" ]
          },
          "user_id" : {
            "type" : "integer",
            "description" : "User id of the collaborator",
            "format" : "int64",
            "example" : 100008
          },
          "email" : {
            "type" : "string",
            "description" : "Collaborator email",
            "example" : "user@domain.com"
          },
          "comment" : {
            "type" : "string",
            "description" : "Text sent when inviting the user to the project",
            "example" : "hey"
          }
        },
        "x-tag" : "projects"
      },
      "ProjectNote" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Project note id",
            "format" : "int64",
            "example" : 1
          },
          "user_id" : {
            "type" : "integer",
            "description" : "User who wrote the note",
            "format" : "int64",
            "example" : 100008
          },
          "abstract" : {
            "type" : "string",
            "description" : "Note Abstract - short/truncated content",
            "example" : "text"
          },
          "user_name" : {
            "type" : "string",
            "description" : "Username of the one who wrote the note",
            "example" : "user"
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when note was created",
            "example" : "2017-05-16T16:49:11Z"
          },
          "modified_date" : {
            "type" : "string",
            "description" : "Date when note was last modified",
            "example" : "2017-05-16T16:49:11Z"
          }
        },
        "x-tag" : "projects"
      },
      "ProjectNotePrivate" : {
        "properties" : {
          "text" : {
            "type" : "string",
            "description" : "Full text of note",
            "example" : "text"
          },
          "id" : {
            "type" : "integer",
            "description" : "Project note id",
            "format" : "int64",
            "example" : 1
          },
          "user_id" : {
            "type" : "integer",
            "description" : "User who wrote the note",
            "format" : "int64",
            "example" : 100008
          },
          "abstract" : {
            "type" : "string",
            "description" : "Note Abstract - short/truncated content",
            "example" : "text"
          },
          "user_name" : {
            "type" : "string",
            "description" : "Username of the one who wrote the note",
            "example" : "user"
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when note was created",
            "example" : "2017-05-16T16:49:11Z"
          },
          "modified_date" : {
            "type" : "string",
            "description" : "Date when note was last modified",
            "example" : "2017-05-16T16:49:11Z"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectNote"
        } ],
        "x-tag" : "projects"
      },
      "ResponseMessage" : {
        "type" : "object",
        "properties" : {
          "message" : {
            "type" : "string",
            "description" : "Response message text",
            "example" : "Project 1 has been published"
          }
        },
        "x-tag" : "common"
      },
      "ProjectNoteCreate" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "minLength" : 3,
            "type" : "string",
            "description" : "Text of the note",
            "example" : "note to remember"
          }
        },
        "x-tag" : "projects"
      },
      "ProjectCreate" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "The title for this project - mandatory. 3 - 1000 characters.",
            "example" : "project title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "Project description",
            "example" : "project description"
          },
          "funding" : {
            "type" : "string",
            "description" : "Grant number or organization(s) that funded this project. Up to 2000 characters permitted.",
            "example" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Only if project type is group.",
            "format" : "int64",
            "example" : 0
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the project",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          }
        },
        "x-tag" : "projects"
      },
      "ProjectUpdate" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "The title for this project - mandatory. 3 - 1000 characters.",
            "example" : "project title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "Project description",
            "example" : "project description"
          },
          "funding" : {
            "type" : "string",
            "description" : "Grant number or organization(s) that funded this project. Up to 2000 characters permitted.",
            "example" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the project",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          }
        },
        "x-tag" : "projects"
      },
      "Project" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "http://api.figshare.com/v2/account/projects/1"
          },
          "id" : {
            "type" : "integer",
            "description" : "Project id",
            "format" : "int64",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "description" : "Project title",
            "example" : "project"
          }
        },
        "x-tag" : "projects"
      },
      "ProjectPrivate" : {
        "properties" : {
          "role" : {
            "type" : "string",
            "description" : "Role inside this project",
            "example" : "Owner",
            "enum" : [ "Owner", "Collaborator", "Viewer" ]
          },
          "storage" : {
            "type" : "string",
            "description" : "Project storage type",
            "example" : "individual",
            "enum" : [ "individual", "group" ]
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "http://api.figshare.com/v2/account/projects/1"
          },
          "id" : {
            "type" : "integer",
            "description" : "Project id",
            "format" : "int64",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "description" : "Project title",
            "example" : "project"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Project"
        } ],
        "x-tag" : "projects"
      },
      "ProjectComplete" : {
        "properties" : {
          "funding" : {
            "type" : "string",
            "description" : "Project funding",
            "example" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Full Project funding information",
            "items" : {
              "$ref" : "#/components/schemas/FundingInformation"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "Project description",
            "example" : "description"
          },
          "collaborators" : {
            "type" : "array",
            "description" : "List of project collaborators",
            "items" : {
              "$ref" : "#/components/schemas/Collaborator"
            }
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "http://api.figshare.com/v2/account/projects/1"
          },
          "id" : {
            "type" : "integer",
            "description" : "Project id",
            "format" : "int64",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "description" : "Project title",
            "example" : "project"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Project"
        } ],
        "x-tag" : "projects"
      },
      "ProjectCompletePrivate" : {
        "properties" : {
          "funding" : {
            "type" : "string",
            "description" : "Project funding",
            "example" : "none"
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Full Project funding information",
            "items" : {
              "$ref" : "#/components/schemas/FundingInformation"
            }
          },
          "description" : {
            "type" : "string",
            "description" : "Project description",
            "example" : "description"
          },
          "collaborators" : {
            "type" : "array",
            "description" : "List of project collaborators",
            "items" : {
              "$ref" : "#/components/schemas/Collaborator"
            }
          },
          "quota" : {
            "type" : "integer",
            "description" : "Project quota",
            "format" : "int64",
            "example" : 0
          },
          "used_quota" : {
            "type" : "integer",
            "description" : "Project used quota",
            "format" : "int64",
            "example" : 0
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when project was created",
            "example" : "2017-05-16T14:52:54Z"
          },
          "modified_date" : {
            "type" : "string",
            "description" : "Date when project was last modified",
            "example" : "2017-05-16T14:52:54Z"
          },
          "used_quota_private" : {
            "type" : "integer",
            "description" : "Project private quota used",
            "format" : "int64",
            "example" : 0
          },
          "used_quota_public" : {
            "type" : "integer",
            "description" : "Project public quota used",
            "format" : "int64",
            "example" : 0
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Group of project if any",
            "format" : "int64",
            "example" : 0
          },
          "account_id" : {
            "type" : "integer",
            "description" : "ID of the account owning the project",
            "format" : "int64",
            "example" : 1000001
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "Collection custom fields",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleField"
            }
          },
          "role" : {
            "type" : "string",
            "description" : "Role inside this project",
            "example" : "Owner",
            "enum" : [ "Owner", "Collaborator", "Viewer" ]
          },
          "storage" : {
            "type" : "string",
            "description" : "Project storage type",
            "example" : "individual",
            "enum" : [ "individual", "group" ]
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "http://api.figshare.com/v2/account/projects/1"
          },
          "id" : {
            "type" : "integer",
            "description" : "Project id",
            "format" : "int64",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "description" : "Project title",
            "example" : "project"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectPrivate"
        } ],
        "x-tag" : "projects"
      },
      "ProjectCollaborator" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "description" : "Status of collaborator invitation",
            "example" : "invited"
          },
          "role_name" : {
            "type" : "string",
            "description" : "Collaborator role",
            "example" : "Owner"
          },
          "user_id" : {
            "type" : "integer",
            "description" : "Collaborator id",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Collaborator name",
            "example" : "name"
          }
        },
        "x-tag" : "projects"
      },
      "Collaborator" : {
        "type" : "object",
        "properties" : {
          "role_name" : {
            "type" : "string",
            "description" : "Collaborator role",
            "example" : "Owner"
          },
          "user_id" : {
            "type" : "integer",
            "description" : "Collaborator id",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "Collaborator name",
            "example" : "name"
          }
        },
        "x-tag" : "projects"
      },
      "InstitutionAccountsSearch" : {
        "type" : "object",
        "properties" : {
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "is_active" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Filter by active status",
            "format" : "int64"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "institution_user_id" : {
            "type" : "string",
            "description" : "filter by institution_user_id",
            "example" : "alan"
          },
          "email" : {
            "type" : "string",
            "description" : "filter by email",
            "example" : "alan@institution.com"
          }
        },
        "x-tag" : "institutions"
      },
      "CommonSearch" : {
        "type" : "object",
        "properties" : {
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution" : {
            "type" : "integer",
            "description" : "only return collections from this institution",
            "format" : "int32",
            "example" : 2000013
          },
          "published_since" : {
            "type" : "string",
            "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "modified_since" : {
            "type" : "string",
            "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "group" : {
            "type" : "integer",
            "description" : "only return collections from this group",
            "format" : "int32",
            "example" : 2000013
          }
        },
        "x-tag" : "common"
      },
      "ProjectsSearch" : {
        "properties" : {
          "order" : {
            "type" : "string",
            "description" : "The field by which to order.",
            "example" : "published_date",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views" ]
          },
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution" : {
            "type" : "integer",
            "description" : "only return collections from this institution",
            "format" : "int32",
            "example" : 2000013
          },
          "published_since" : {
            "type" : "string",
            "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "modified_since" : {
            "type" : "string",
            "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "group" : {
            "type" : "integer",
            "description" : "only return collections from this group",
            "format" : "int32",
            "example" : 2000013
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonSearch"
        } ],
        "x-tag" : "projects"
      },
      "ArticleSearch" : {
        "properties" : {
          "resource_doi" : {
            "type" : "string",
            "description" : "Only return articles with this resource_doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "item_type" : {
            "type" : "integer",
            "description" : "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
            "format" : "int64",
            "example" : 1
          },
          "doi" : {
            "type" : "string",
            "description" : "Only return articles with this doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "handle" : {
            "type" : "string",
            "description" : "Only return articles with this handle",
            "example" : "111084/m9.figshare.14074"
          },
          "order" : {
            "type" : "string",
            "description" : "The field by which to order",
            "example" : "published_date",
            "default" : "created_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "downloads", "cites" ]
          },
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution" : {
            "type" : "integer",
            "description" : "only return collections from this institution",
            "format" : "int32",
            "example" : 2000013
          },
          "published_since" : {
            "type" : "string",
            "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "modified_since" : {
            "type" : "string",
            "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "group" : {
            "type" : "integer",
            "description" : "only return collections from this group",
            "format" : "int32",
            "example" : 2000013
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonSearch"
        } ],
        "x-tag" : "articles"
      },
      "PrivateArticleSearch" : {
        "properties" : {
          "resource_id" : {
            "type" : "string",
            "description" : "only return collections with this resource_id",
            "example" : "1407024"
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Only return articles with this resource_doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "item_type" : {
            "type" : "integer",
            "description" : "Only return articles with the respective type. Mapping for item_type is: 1 - Figure, 2 - Media, 3 - Dataset, 5 - Poster, 6 - Journal contribution, 7 - Presentation, 8 - Thesis, 9 - Software, 11 - Online resource, 12 - Preprint, 13 - Book, 14 - Conference contribution, 15 - Chapter, 16 - Peer review, 17 - Educational resource, 18 - Report, 19 - Standard, 20 - Composition, 21 - Funding, 22 - Physical object, 23 - Data management plan, 24 - Workflow, 25 - Monograph, 26 - Performance, 27 - Event, 28 - Service, 29 - Model",
            "format" : "int64",
            "example" : 1
          },
          "doi" : {
            "type" : "string",
            "description" : "Only return articles with this doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "handle" : {
            "type" : "string",
            "description" : "Only return articles with this handle",
            "example" : "111084/m9.figshare.14074"
          },
          "order" : {
            "type" : "string",
            "description" : "The field by which to order",
            "example" : "published_date",
            "default" : "created_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "downloads", "cites" ]
          },
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution" : {
            "type" : "integer",
            "description" : "only return collections from this institution",
            "format" : "int32",
            "example" : 2000013
          },
          "published_since" : {
            "type" : "string",
            "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "modified_since" : {
            "type" : "string",
            "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "group" : {
            "type" : "integer",
            "description" : "only return collections from this group",
            "format" : "int32",
            "example" : 2000013
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ArticleSearch"
        } ],
        "x-tag" : "articles"
      },
      "CollectionSearch" : {
        "properties" : {
          "resource_doi" : {
            "type" : "string",
            "description" : "Only return collections with this resource_doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "doi" : {
            "type" : "string",
            "description" : "Only return collections with this doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "handle" : {
            "type" : "string",
            "description" : "Only return collections with this handle",
            "example" : "10084/figshare.1407024"
          },
          "order" : {
            "type" : "string",
            "description" : "The field by which to order.",
            "example" : "published_date",
            "default" : "created_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "cites" ]
          },
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution" : {
            "type" : "integer",
            "description" : "only return collections from this institution",
            "format" : "int32",
            "example" : 2000013
          },
          "published_since" : {
            "type" : "string",
            "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "modified_since" : {
            "type" : "string",
            "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "group" : {
            "type" : "integer",
            "description" : "only return collections from this group",
            "format" : "int32",
            "example" : 2000013
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/CommonSearch"
        } ],
        "x-tag" : "collections"
      },
      "PrivateAuthorsSearch" : {
        "type" : "object",
        "properties" : {
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order" : {
            "type" : "string",
            "description" : "The field by which to order. Default varies by endpoint/resource.",
            "example" : "published_date",
            "default" : "published_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "downloads", "cites" ]
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution_id" : {
            "type" : "integer",
            "description" : "Return only authors associated to this institution",
            "format" : "int64",
            "example" : 1
          },
          "orcid" : {
            "type" : "string",
            "description" : "Orcid of author"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Return only authors in this group or subgroups of the group",
            "format" : "int64"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Return only active authors if True"
          },
          "is_public" : {
            "type" : "boolean",
            "description" : "Return only authors that have published items if True"
          }
        },
        "x-tag" : "authors"
      },
      "PrivateCollectionSearch" : {
        "properties" : {
          "resource_id" : {
            "type" : "string",
            "description" : "only return collections with this resource_id",
            "example" : "1407024"
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Only return collections with this resource_doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "doi" : {
            "type" : "string",
            "description" : "Only return collections with this doi",
            "example" : "10.6084/m9.figshare.1407024"
          },
          "handle" : {
            "type" : "string",
            "description" : "Only return collections with this handle",
            "example" : "10084/figshare.1407024"
          },
          "order" : {
            "type" : "string",
            "description" : "The field by which to order.",
            "example" : "published_date",
            "default" : "created_date",
            "enum" : [ "published_date", "modified_date", "views", "shares", "cites" ]
          },
          "search_for" : {
            "type" : "string",
            "description" : "Search term",
            "example" : "figshare"
          },
          "page" : {
            "maximum" : 5000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Page number. Used for pagination with page_size",
            "format" : "int64",
            "example" : 1
          },
          "page_size" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "The number of results included on a page. Used for pagination with page",
            "format" : "int64",
            "example" : 10,
            "default" : 10
          },
          "limit" : {
            "maximum" : 1000,
            "minimum" : 1,
            "type" : "integer",
            "description" : "Number of results included on a page. Used for pagination with query",
            "format" : "int64",
            "example" : 10
          },
          "offset" : {
            "maximum" : 5000,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Where to start the listing(the offset of the first result). Used for pagination with limit",
            "format" : "int64",
            "example" : 0
          },
          "order_direction" : {
            "type" : "string",
            "description" : "Direction of ordering",
            "example" : "desc",
            "default" : "desc",
            "enum" : [ "asc", "desc" ]
          },
          "institution" : {
            "type" : "integer",
            "description" : "only return collections from this institution",
            "format" : "int32",
            "example" : 2000013
          },
          "published_since" : {
            "type" : "string",
            "description" : "Filter by article publishing date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "modified_since" : {
            "type" : "string",
            "description" : "Filter by article modified date. Will only return articles published after the date. date(ISO 8601) YYYY-MM-DD",
            "example" : "2017-12-22"
          },
          "group" : {
            "type" : "integer",
            "description" : "only return collections from this group",
            "format" : "int32",
            "example" : 2000013
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/CollectionSearch"
        } ],
        "x-tag" : "collections"
      },
      "AccountCreate" : {
        "required" : [ "email", "last_name" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "maxLength" : 150,
            "minLength" : 3,
            "type" : "string",
            "description" : "Email of account",
            "example" : "johndoe@example.com"
          },
          "first_name" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "First Name",
            "example" : "John",
            "default" : ""
          },
          "last_name" : {
            "maxLength" : 30,
            "type" : "string",
            "description" : "Last Name",
            "example" : "Doe",
            "default" : ""
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups",
            "format" : "int64"
          },
          "institution_user_id" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Institution user id",
            "example" : "johndoe",
            "default" : ""
          },
          "symplectic_user_id" : {
            "maxLength" : 50,
            "type" : "string",
            "description" : "Symplectic user id",
            "example" : "johndoe",
            "default" : ""
          },
          "quota" : {
            "type" : "integer",
            "description" : "Account quota",
            "format" : "int64",
            "example" : 1000
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Is account active"
          }
        },
        "x-tag" : "institutions"
      },
      "AccountUpdate" : {
        "type" : "object",
        "properties" : {
          "group_id" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups",
            "format" : "int64"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Is account active"
          }
        },
        "x-tag" : "institutions"
      },
      "Curation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The review id",
            "format" : "int64"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "The group in which the article is present.",
            "format" : "int64"
          },
          "account_id" : {
            "type" : "integer",
            "description" : "The ID of the account of the owner of the article of this review.",
            "format" : "int64"
          },
          "assigned_to" : {
            "type" : "integer",
            "description" : "The ID of the account to which this review is assigned.",
            "format" : "int64"
          },
          "article_id" : {
            "type" : "integer",
            "description" : "The ID of the article of this review.",
            "format" : "int64"
          },
          "version" : {
            "type" : "integer",
            "description" : "The Version number of the article in review.",
            "format" : "int64"
          },
          "comments_count" : {
            "type" : "integer",
            "description" : "The number of comments in the review.",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the review.",
            "enum" : [ "pending", "approved", "rejected", "closed" ]
          },
          "created_date" : {
            "type" : "string",
            "description" : "The creation date of the review."
          },
          "modified_date" : {
            "type" : "string",
            "description" : "The date the review has been modified."
          }
        },
        "x-tag" : "institutions"
      },
      "CurationDetail" : {
        "properties" : {
          "item" : {
            "$ref" : "#/components/schemas/ArticleComplete"
          },
          "id" : {
            "type" : "integer",
            "description" : "The review id",
            "format" : "int64"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "The group in which the article is present.",
            "format" : "int64"
          },
          "account_id" : {
            "type" : "integer",
            "description" : "The ID of the account of the owner of the article of this review.",
            "format" : "int64"
          },
          "assigned_to" : {
            "type" : "integer",
            "description" : "The ID of the account to which this review is assigned.",
            "format" : "int64"
          },
          "article_id" : {
            "type" : "integer",
            "description" : "The ID of the article of this review.",
            "format" : "int64"
          },
          "version" : {
            "type" : "integer",
            "description" : "The Version number of the article in review.",
            "format" : "int64"
          },
          "comments_count" : {
            "type" : "integer",
            "description" : "The number of comments in the review.",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "description" : "The status of the review.",
            "enum" : [ "pending", "approved", "rejected", "closed" ]
          },
          "created_date" : {
            "type" : "string",
            "description" : "The creation date of the review."
          },
          "modified_date" : {
            "type" : "string",
            "description" : "The date the review has been modified."
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Curation"
        } ],
        "x-tag" : "institutions"
      },
      "CurationComment" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "The ID of the comment.",
            "format" : "int64"
          },
          "account_id" : {
            "type" : "integer",
            "description" : "The ID of the account which generated this comment.",
            "format" : "int64"
          },
          "type" : {
            "type" : "string",
            "description" : "The ID of the account which generated this comment.",
            "enum" : [ "comment", "approved", "rejected", "closed" ]
          },
          "text" : {
            "type" : "string",
            "description" : "The value/content of the comment."
          }
        },
        "x-tag" : "institutions"
      },
      "CurationCommentCreate" : {
        "required" : [ "text" ],
        "type" : "object",
        "properties" : {
          "text" : {
            "maxLength" : 2000,
            "minLength" : 1,
            "type" : "string",
            "description" : "The contents/value of the comment"
          }
        },
        "x-tag" : "institutions"
      },
      "Resource" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "ID of resource item",
            "example" : "aaaa23512",
            "default" : ""
          },
          "title" : {
            "maxLength" : 1000,
            "type" : "string",
            "description" : "Title of resource item",
            "example" : "Test title",
            "default" : ""
          },
          "link" : {
            "maxLength" : 255,
            "type" : "string",
            "description" : "Link of resource item",
            "example" : "https://docs.figshare.com",
            "default" : ""
          },
          "status" : {
            "maxLength" : 100,
            "type" : "string",
            "description" : "Status of resource item",
            "example" : "frozen",
            "default" : ""
          },
          "version" : {
            "type" : "integer",
            "description" : "Version of resource item",
            "format" : "int64",
            "example" : 1,
            "default" : 0
          }
        },
        "x-tag" : "resource"
      },
      "ArticleUpdate" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "The article description. In a publisher case, usually this is the remote article description",
            "example" : "Test description of article",
            "default" : ""
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags to be associated with the article. Keywords can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "keywords" : {
            "type" : "array",
            "description" : "List of tags to be associated with the article. Tags can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of links to be associated with the article (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
            "example" : [ "http://figshare.com", "http://api.figshare.com" ],
            "items" : {
              "type" : "string",
              "format" : "link"
            }
          },
          "categories" : {
            "type" : "array",
            "description" : "List of category ids to be associated with the article(e.g [1, 23, 33, 66])",
            "example" : [ 1, 10, 11 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "categories_by_source_id" : {
            "type" : "array",
            "description" : "List of category source ids to be associated with the article, supersedes the categories property",
            "example" : [ "300204", "400207" ],
            "items" : {
              "type" : "string"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.",
            "example" : [ {
              "name" : "John Doe"
            }, {
              "id" : 1000008
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the article",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          },
          "defined_type" : {
            "type" : "string",
            "description" : "<b>One of:</b> <code>figure</code> <code>online resource</code> <code>preprint</code> <code>book</code> <code>conference contribution</code> <code>media</code> <code>dataset</code> <code>poster</code> <code>journal contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>",
            "example" : "media"
          },
          "funding" : {
            "type" : "string",
            "description" : "Grant number or funding authority",
            "default" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "license" : {
            "type" : "integer",
            "description" : "License id for this article.",
            "format" : "int64",
            "example" : 1,
            "default" : 0
          },
          "doi" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "handle" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
            "default" : ""
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article title.",
            "default" : ""
          },
          "timeline" : {
            "$ref" : "#/components/schemas/TimelineUpdate"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups",
            "format" : "int64"
          }
        },
        "x-tag" : "articles"
      },
      "ArticleCreate" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "The article description. In a publisher case, usually this is the remote article description",
            "example" : "Test description of article",
            "default" : ""
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags to be associated with the article. Keywords can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "keywords" : {
            "type" : "array",
            "description" : "List of tags to be associated with the article. Tags can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of links to be associated with the article (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
            "example" : [ "http://figshare.com", "http://api.figshare.com" ],
            "items" : {
              "type" : "string",
              "format" : "link"
            }
          },
          "categories" : {
            "type" : "array",
            "description" : "List of category ids to be associated with the article(e.g [1, 23, 33, 66])",
            "example" : [ 1, 10, 11 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "categories_by_source_id" : {
            "type" : "array",
            "description" : "List of category source ids to be associated with the article, supersedes the categories property",
            "example" : [ "300204", "400207" ],
            "items" : {
              "type" : "string"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.",
            "example" : [ {
              "name" : "John Doe"
            }, {
              "id" : 1000008
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the article",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          },
          "defined_type" : {
            "type" : "string",
            "description" : "<b>One of:</b> <code>figure</code> <code>online resource</code> <code>preprint</code> <code>book</code> <code>conference contribution</code> <code>media</code> <code>dataset</code> <code>poster</code> <code>journal contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>",
            "example" : "media"
          },
          "funding" : {
            "type" : "string",
            "description" : "Grant number or funding authority",
            "default" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "license" : {
            "type" : "integer",
            "description" : "License id for this article.",
            "format" : "int64",
            "example" : 1,
            "default" : 0
          },
          "doi" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "handle" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
            "default" : ""
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article title.",
            "default" : ""
          },
          "timeline" : {
            "$ref" : "#/components/schemas/TimelineUpdate"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups",
            "format" : "int64"
          }
        },
        "x-tag" : "articles"
      },
      "ArticleProjectCreate" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "The article description. In a publisher case, usually this is the remote article description",
            "example" : "Test description of article",
            "default" : ""
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags to be associated with the article. Keywords can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "keywords" : {
            "type" : "array",
            "description" : "List of tags to be associated with the article. Tags can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of links to be associated with the article (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
            "example" : [ "http://figshare.com", "http://api.figshare.com" ],
            "items" : {
              "type" : "string",
              "format" : "link"
            }
          },
          "categories" : {
            "type" : "array",
            "description" : "List of category ids to be associated with the article(e.g [1, 23, 33, 66])",
            "example" : [ 1, 10, 11 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "categories_by_source_id" : {
            "type" : "array",
            "description" : "List of category source ids to be associated with the article, supersedes the categories property",
            "example" : [ "300204", "400207" ],
            "items" : {
              "type" : "string"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.",
            "example" : [ {
              "name" : "John Doe"
            }, {
              "id" : 1000008
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the article",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          },
          "defined_type" : {
            "type" : "string",
            "description" : "<b>One of:</b> <code>figure</code> <code>online resource</code> <code>preprint</code> <code>book</code> <code>conference contribution</code> <code>media</code> <code>dataset</code> <code>poster</code> <code>journal contribution</code> <code>presentation</code> <code>thesis</code> <code>software</code>",
            "example" : "media"
          },
          "funding" : {
            "type" : "string",
            "description" : "Grant number or funding authority",
            "default" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "license" : {
            "type" : "integer",
            "description" : "License id for this article.",
            "format" : "int64",
            "example" : 1,
            "default" : 0
          },
          "doi" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "handle" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
            "default" : ""
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article title.",
            "default" : ""
          },
          "timeline" : {
            "$ref" : "#/components/schemas/TimelineUpdate"
          }
        },
        "x-tag" : "articles"
      },
      "Article" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Unique identifier for article",
            "format" : "int64",
            "example" : 1434614
          },
          "title" : {
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "doi" : {
            "type" : "string",
            "description" : "DOI",
            "example" : "10.6084/m9.figshare.1434614"
          },
          "handle" : {
            "type" : "string",
            "description" : "Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint for article",
            "format" : "url",
            "example" : "http://api.figshare.com/articles/1434614"
          },
          "url_public_html" : {
            "type" : "string",
            "description" : "Public site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/articles/media/Test_article_title/1434614"
          },
          "url_public_api" : {
            "type" : "string",
            "description" : "Public Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/articles/1434614"
          },
          "url_private_html" : {
            "type" : "string",
            "description" : "Private site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/account/articles/1434614"
          },
          "url_private_api" : {
            "type" : "string",
            "description" : "Private Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/account/articles/1434614"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          },
          "thumb" : {
            "type" : "string",
            "description" : "Thumbnail image",
            "format" : "url",
            "example" : "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
          },
          "defined_type" : {
            "type" : "integer",
            "description" : "Type of article identifier",
            "format" : "int64",
            "example" : 3
          },
          "defined_type_name" : {
            "type" : "string",
            "description" : "Name of the article type identifier",
            "example" : "media"
          }
        },
        "x-tag" : "articles"
      },
      "TimelineUpdate" : {
        "type" : "object",
        "properties" : {
          "firstOnline" : {
            "type" : "string",
            "description" : "Online posted date",
            "example" : "2015-12-31"
          },
          "publisherPublication" : {
            "type" : "string",
            "description" : "Publish date",
            "example" : "2015-12-31"
          },
          "publisherAcceptance" : {
            "type" : "string",
            "description" : "Date when the item was accepted for publication",
            "example" : "2015-12-31"
          }
        },
        "x-tag" : "timeline_update"
      },
      "Timeline" : {
        "properties" : {
          "firstOnline" : {
            "type" : "string",
            "description" : "Online posted date",
            "example" : "2015-12-31"
          },
          "publisherPublication" : {
            "type" : "string",
            "description" : "Publish date",
            "example" : "2015-12-31"
          },
          "publisherAcceptance" : {
            "type" : "string",
            "description" : "Date when the item was accepted for publication",
            "example" : "2015-12-31"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/TimelineUpdate"
        } ],
        "x-tag" : "timeline"
      },
      "ProjectArticle" : {
        "properties" : {
          "citation" : {
            "type" : "string",
            "description" : "Article citation",
            "example" : "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
          },
          "confidential_reason" : {
            "type" : "string",
            "description" : "Confidentiality reason",
            "example" : "none"
          },
          "is_confidential" : {
            "type" : "boolean",
            "description" : "Article Confidentiality",
            "example" : true
          },
          "size" : {
            "type" : "integer",
            "description" : "Article size",
            "format" : "int64",
            "example" : 69939
          },
          "funding" : {
            "type" : "string",
            "description" : "Article funding",
            "example" : "none"
          },
          "funding_list" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of article tags",
            "example" : [ "t1", "t2", "t3" ],
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "description" : "Article version",
            "format" : "int64",
            "example" : 1
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "True if article is active",
            "example" : true
          },
          "is_metadata_record" : {
            "type" : "boolean",
            "description" : "True if article has no files",
            "example" : false
          },
          "metadata_reason" : {
            "type" : "string",
            "description" : "Article metadata reason",
            "example" : "hosted somewhere else"
          },
          "status" : {
            "type" : "string",
            "description" : "Article status",
            "example" : "public"
          },
          "description" : {
            "type" : "string",
            "description" : "Article description",
            "example" : "article description"
          },
          "is_embargoed" : {
            "type" : "boolean",
            "description" : "True if article is embargoed",
            "example" : true
          },
          "is_public" : {
            "type" : "boolean",
            "description" : "True if article is published",
            "example" : true
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when article was created",
            "example" : "2017-05-18T11:49:03Z"
          },
          "has_linked_file" : {
            "type" : "boolean",
            "description" : "True if any files are linked to the article",
            "example" : true
          },
          "categories" : {
            "type" : "array",
            "description" : "List of categories selected for the article",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "embargo_title" : {
            "type" : "string",
            "description" : "Title for embargo",
            "example" : "File(s) under embargo"
          },
          "embargo_reason" : {
            "type" : "string",
            "description" : "Reason for embargo",
            "example" : "not complete"
          },
          "references" : {
            "type" : "array",
            "description" : "List of references",
            "example" : [ "http://figshare.com", "http://figshare.com/api" ],
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "id" : {
            "type" : "integer",
            "description" : "Unique identifier for article",
            "format" : "int64",
            "example" : 1434614
          },
          "title" : {
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "doi" : {
            "type" : "string",
            "description" : "DOI",
            "example" : "10.6084/m9.figshare.1434614"
          },
          "handle" : {
            "type" : "string",
            "description" : "Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint for article",
            "format" : "url",
            "example" : "http://api.figshare.com/articles/1434614"
          },
          "url_public_html" : {
            "type" : "string",
            "description" : "Public site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/articles/media/Test_article_title/1434614"
          },
          "url_public_api" : {
            "type" : "string",
            "description" : "Public Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/articles/1434614"
          },
          "url_private_html" : {
            "type" : "string",
            "description" : "Private site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/account/articles/1434614"
          },
          "url_private_api" : {
            "type" : "string",
            "description" : "Private Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/account/articles/1434614"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          },
          "thumb" : {
            "type" : "string",
            "description" : "Thumbnail image",
            "format" : "url",
            "example" : "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
          },
          "defined_type" : {
            "type" : "integer",
            "description" : "Type of article identifier",
            "format" : "int64",
            "example" : 3
          },
          "defined_type_name" : {
            "type" : "string",
            "description" : "Name of the article type identifier",
            "example" : "media"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Article"
        } ],
        "x-tag" : "articles"
      },
      "ArticleComplete" : {
        "properties" : {
          "figshare_url" : {
            "type" : "string",
            "description" : "Article public url",
            "format" : "url",
            "example" : "http://figshare.com/articles/media/article_name/2000005"
          },
          "files" : {
            "type" : "array",
            "description" : "List of article files",
            "items" : {
              "$ref" : "#/components/schemas/PublicFile"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of article authors",
            "items" : {
              "$ref" : "#/components/schemas/Author"
            }
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "List of custom fields values",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleField"
            }
          },
          "embargo_options" : {
            "type" : "array",
            "description" : "List of embargo options",
            "items" : {
              "$ref" : "#/components/schemas/GroupEmbargoOptions"
            }
          },
          "citation" : {
            "type" : "string",
            "description" : "Article citation",
            "example" : "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
          },
          "confidential_reason" : {
            "type" : "string",
            "description" : "Confidentiality reason",
            "example" : "none"
          },
          "is_confidential" : {
            "type" : "boolean",
            "description" : "Article Confidentiality",
            "example" : true
          },
          "size" : {
            "type" : "integer",
            "description" : "Article size",
            "format" : "int64",
            "example" : 69939
          },
          "funding" : {
            "type" : "string",
            "description" : "Article funding",
            "example" : "none"
          },
          "funding_list" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of article tags",
            "example" : [ "t1", "t2", "t3" ],
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "description" : "Article version",
            "format" : "int64",
            "example" : 1
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "True if article is active",
            "example" : true
          },
          "is_metadata_record" : {
            "type" : "boolean",
            "description" : "True if article has no files",
            "example" : false
          },
          "metadata_reason" : {
            "type" : "string",
            "description" : "Article metadata reason",
            "example" : "hosted somewhere else"
          },
          "status" : {
            "type" : "string",
            "description" : "Article status",
            "example" : "public"
          },
          "description" : {
            "type" : "string",
            "description" : "Article description",
            "example" : "article description"
          },
          "is_embargoed" : {
            "type" : "boolean",
            "description" : "True if article is embargoed",
            "example" : true
          },
          "is_public" : {
            "type" : "boolean",
            "description" : "True if article is published",
            "example" : true
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when article was created",
            "example" : "2017-05-18T11:49:03Z"
          },
          "has_linked_file" : {
            "type" : "boolean",
            "description" : "True if any files are linked to the article",
            "example" : true
          },
          "categories" : {
            "type" : "array",
            "description" : "List of categories selected for the article",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "embargo_title" : {
            "type" : "string",
            "description" : "Title for embargo",
            "example" : "File(s) under embargo"
          },
          "embargo_reason" : {
            "type" : "string",
            "description" : "Reason for embargo",
            "example" : "not complete"
          },
          "references" : {
            "type" : "array",
            "description" : "List of references",
            "example" : [ "http://figshare.com", "http://figshare.com/api" ],
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "id" : {
            "type" : "integer",
            "description" : "Unique identifier for article",
            "format" : "int64",
            "example" : 1434614
          },
          "title" : {
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "doi" : {
            "type" : "string",
            "description" : "DOI",
            "example" : "10.6084/m9.figshare.1434614"
          },
          "handle" : {
            "type" : "string",
            "description" : "Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint for article",
            "format" : "url",
            "example" : "http://api.figshare.com/articles/1434614"
          },
          "url_public_html" : {
            "type" : "string",
            "description" : "Public site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/articles/media/Test_article_title/1434614"
          },
          "url_public_api" : {
            "type" : "string",
            "description" : "Public Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/articles/1434614"
          },
          "url_private_html" : {
            "type" : "string",
            "description" : "Private site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/account/articles/1434614"
          },
          "url_private_api" : {
            "type" : "string",
            "description" : "Private Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/account/articles/1434614"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          },
          "thumb" : {
            "type" : "string",
            "description" : "Thumbnail image",
            "format" : "url",
            "example" : "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
          },
          "defined_type" : {
            "type" : "integer",
            "description" : "Type of article identifier",
            "format" : "int64",
            "example" : 3
          },
          "defined_type_name" : {
            "type" : "string",
            "description" : "Name of the article type identifier",
            "example" : "media"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProjectArticle"
        } ],
        "x-tag" : "articles"
      },
      "ArticleCompletePrivate" : {
        "properties" : {
          "account_id" : {
            "type" : "integer",
            "description" : "ID of the account owning the article",
            "format" : "int64",
            "example" : 1000001
          },
          "figshare_url" : {
            "type" : "string",
            "description" : "Article public url",
            "format" : "url",
            "example" : "http://figshare.com/articles/media/article_name/2000005"
          },
          "files" : {
            "type" : "array",
            "description" : "List of article files",
            "items" : {
              "$ref" : "#/components/schemas/PublicFile"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of article authors",
            "items" : {
              "$ref" : "#/components/schemas/Author"
            }
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "List of custom fields values",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleField"
            }
          },
          "embargo_options" : {
            "type" : "array",
            "description" : "List of embargo options",
            "items" : {
              "$ref" : "#/components/schemas/GroupEmbargoOptions"
            }
          },
          "citation" : {
            "type" : "string",
            "description" : "Article citation",
            "example" : "lilliput, figshare admin (2017): first project item. figshare.\n \n Retrieved: 14 01, May 22, 2017 (GMT)"
          },
          "confidential_reason" : {
            "type" : "string",
            "description" : "Confidentiality reason",
            "example" : "none"
          },
          "is_confidential" : {
            "type" : "boolean",
            "description" : "Article Confidentiality",
            "example" : true
          },
          "size" : {
            "type" : "integer",
            "description" : "Article size",
            "format" : "int64",
            "example" : 69939
          },
          "funding" : {
            "type" : "string",
            "description" : "Article funding",
            "example" : "none"
          },
          "funding_list" : {
            "type" : "array",
            "items" : {
              "type" : "integer"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of article tags",
            "example" : [ "t1", "t2", "t3" ],
            "items" : {
              "type" : "string"
            }
          },
          "version" : {
            "type" : "integer",
            "description" : "Article version",
            "format" : "int64",
            "example" : 1
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "True if article is active",
            "example" : true
          },
          "is_metadata_record" : {
            "type" : "boolean",
            "description" : "True if article has no files",
            "example" : false
          },
          "metadata_reason" : {
            "type" : "string",
            "description" : "Article metadata reason",
            "example" : "hosted somewhere else"
          },
          "status" : {
            "type" : "string",
            "description" : "Article status",
            "example" : "public"
          },
          "description" : {
            "type" : "string",
            "description" : "Article description",
            "example" : "article description"
          },
          "is_embargoed" : {
            "type" : "boolean",
            "description" : "True if article is embargoed",
            "example" : true
          },
          "is_public" : {
            "type" : "boolean",
            "description" : "True if article is published",
            "example" : true
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when article was created",
            "example" : "2017-05-18T11:49:03Z"
          },
          "has_linked_file" : {
            "type" : "boolean",
            "description" : "True if any files are linked to the article",
            "example" : true
          },
          "categories" : {
            "type" : "array",
            "description" : "List of categories selected for the article",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          },
          "license" : {
            "$ref" : "#/components/schemas/License"
          },
          "embargo_title" : {
            "type" : "string",
            "description" : "Title for embargo",
            "example" : "File(s) under embargo"
          },
          "embargo_reason" : {
            "type" : "string",
            "description" : "Reason for embargo",
            "example" : "not complete"
          },
          "references" : {
            "type" : "array",
            "description" : "List of references",
            "example" : [ "http://figshare.com", "http://figshare.com/api" ],
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "id" : {
            "type" : "integer",
            "description" : "Unique identifier for article",
            "format" : "int64",
            "example" : 1434614
          },
          "title" : {
            "type" : "string",
            "description" : "Title of article",
            "example" : "Test article title"
          },
          "doi" : {
            "type" : "string",
            "description" : "DOI",
            "example" : "10.6084/m9.figshare.1434614"
          },
          "handle" : {
            "type" : "string",
            "description" : "Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint for article",
            "format" : "url",
            "example" : "http://api.figshare.com/articles/1434614"
          },
          "url_public_html" : {
            "type" : "string",
            "description" : "Public site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/articles/media/Test_article_title/1434614"
          },
          "url_public_api" : {
            "type" : "string",
            "description" : "Public Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/articles/1434614"
          },
          "url_private_html" : {
            "type" : "string",
            "description" : "Private site endpoint for article",
            "format" : "url",
            "example" : "https://figshare.com/account/articles/1434614"
          },
          "url_private_api" : {
            "type" : "string",
            "description" : "Private Api endpoint for article",
            "format" : "url",
            "example" : "https://api.figshare.com/account/articles/1434614"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          },
          "thumb" : {
            "type" : "string",
            "description" : "Thumbnail image",
            "format" : "url",
            "example" : "https://ndownloader.figshare.com/files/123456789/preview/12345678/thumb.png"
          },
          "defined_type" : {
            "type" : "integer",
            "description" : "Type of article identifier",
            "format" : "int64",
            "example" : 3
          },
          "defined_type_name" : {
            "type" : "string",
            "description" : "Name of the article type identifier",
            "example" : "media"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/ArticleComplete"
        } ],
        "x-tag" : "articles"
      },
      "CollectionCompletePrivate" : {
        "properties" : {
          "account_id" : {
            "type" : "integer",
            "description" : "ID of the account owning the collection",
            "format" : "int64",
            "example" : 1000001
          },
          "funding" : {
            "type" : "array",
            "description" : "Full Collection funding information",
            "items" : {
              "$ref" : "#/components/schemas/FundingInformation"
            }
          },
          "resource_id" : {
            "type" : "string",
            "description" : "Collection resource id",
            "example" : ""
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Collection resource doi",
            "example" : "10.6084/m9.figshare.123"
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Collection resource title",
            "example" : "test"
          },
          "resource_link" : {
            "type" : "string",
            "description" : "Collection resource link",
            "example" : "http://figshare.com"
          },
          "resource_version" : {
            "type" : "integer",
            "description" : "Collection resource version",
            "format" : "int64",
            "example" : 0
          },
          "version" : {
            "type" : "integer",
            "description" : "Collection version",
            "format" : "int64",
            "example" : 1
          },
          "description" : {
            "type" : "string",
            "description" : "Collection description",
            "example" : "description"
          },
          "categories" : {
            "type" : "array",
            "description" : "List of collection categories",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of collection references",
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of collection tags",
            "example" : [ "t1", "t2" ],
            "items" : {
              "type" : "string"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of collection authors",
            "items" : {
              "$ref" : "#/components/schemas/Author"
            }
          },
          "institution_id" : {
            "type" : "integer",
            "description" : "Collection institution",
            "format" : "int64",
            "example" : 1
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Collection group",
            "format" : "int64",
            "example" : 1
          },
          "articles_count" : {
            "type" : "integer",
            "description" : "Number of articles in collection",
            "format" : "int64",
            "example" : 1
          },
          "public" : {
            "type" : "boolean",
            "description" : "True if collection is published",
            "example" : true
          },
          "citation" : {
            "type" : "string",
            "description" : "Collection citation",
            "example" : "citation"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "Collection custom fields",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleField"
            }
          },
          "modified_date" : {
            "type" : "string",
            "description" : "Date when collection was last modified",
            "example" : "2017-05-15T15:12:26Z"
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when collection was created",
            "example" : "2017-05-15T15:12:26Z"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          },
          "id" : {
            "type" : "integer",
            "description" : "Collection id",
            "format" : "int64",
            "example" : 123
          },
          "title" : {
            "type" : "string",
            "description" : "Collection title",
            "example" : "Sample collection"
          },
          "doi" : {
            "type" : "string",
            "description" : "Collection DOI",
            "example" : "10.6084/m9.figshare.123"
          },
          "handle" : {
            "type" : "string",
            "description" : "Collection Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "https://api.figshare.com/v2/collections/123"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Collection"
        } ],
        "x-tag" : "collections"
      },
      "Category" : {
        "type" : "object",
        "properties" : {
          "parent_id" : {
            "type" : "integer",
            "description" : "Parent category",
            "format" : "int64",
            "example" : 1
          },
          "id" : {
            "type" : "integer",
            "description" : "Category id",
            "format" : "int64",
            "example" : 11
          },
          "title" : {
            "type" : "string",
            "description" : "Category title",
            "example" : "Anatomy"
          },
          "path" : {
            "type" : "string",
            "description" : "Path to all ancestor ids",
            "example" : "/450/1024/6532"
          },
          "source_id" : {
            "type" : "string",
            "description" : "ID in original standard taxonomy",
            "example" : "300204"
          },
          "taxonomy_id" : {
            "type" : "integer",
            "description" : "Internal id of taxonomy the category is part of",
            "format" : "int64",
            "example" : 4
          }
        },
        "x-tag" : "common"
      },
      "License" : {
        "type" : "object",
        "properties" : {
          "value" : {
            "type" : "integer",
            "description" : "License value",
            "format" : "int64",
            "example" : 1
          },
          "name" : {
            "type" : "string",
            "description" : "License name",
            "example" : "CC BY"
          },
          "url" : {
            "type" : "string",
            "description" : "License url",
            "format" : "url",
            "example" : "http://creativecommons.org/licenses/by/4.0/"
          }
        },
        "x-tag" : "institutions"
      },
      "ArticleVersions" : {
        "type" : "object",
        "properties" : {
          "version" : {
            "type" : "integer",
            "description" : "Version number",
            "format" : "int64",
            "example" : 1
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint for the item version",
            "format" : "url",
            "example" : "https://api.figshare.com/v2/articles/2000005/versions/1"
          }
        },
        "x-tag" : "articles"
      },
      "CollectionVersions" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Version number",
            "format" : "int64",
            "example" : 1
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint for the collection version",
            "format" : "url",
            "example" : "https://api.figshare.com/v2/collections/2000005/versions/1"
          }
        },
        "x-tag" : "collections"
      },
      "ArticleEmbargo" : {
        "type" : "object",
        "properties" : {
          "is_embargoed" : {
            "type" : "boolean",
            "description" : "True if embargoed",
            "example" : true
          },
          "embargo_title" : {
            "type" : "string",
            "description" : "Title for embargo",
            "example" : "File(s) under embargo"
          },
          "embargo_reason" : {
            "type" : "string",
            "description" : "Reason for embargo",
            "example" : ""
          },
          "embargo_options" : {
            "type" : "array",
            "description" : "List of embargo permissions that are associated with the article. If the type is logged_in and the group_ids list is empty, then the whole institution can see the article; if there are multiple group_ids, then only users that are under those groups can see the article.",
            "example" : [ {
              "id" : 13,
              "type" : "ip_range",
              "group_ids" : [ ],
              "ip_name" : "bacau"
            }, {
              "id" : 12,
              "type" : "logged_in",
              "ip_name" : "",
              "group_ids" : [ 550, 9448 ]
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "x-tag" : "articles"
      },
      "ArticleEmbargoUpdater" : {
        "required" : [ "embargo_date", "embargo_type", "is_embargoed" ],
        "type" : "object",
        "properties" : {
          "is_embargoed" : {
            "type" : "boolean",
            "description" : "Embargo status",
            "example" : true
          },
          "embargo_date" : {
            "type" : "string",
            "description" : "Date when the embargo expires and the article gets published, '0' value will set up permanent embargo",
            "example" : "2018-05-22T04:04:04"
          },
          "embargo_type" : {
            "type" : "string",
            "description" : "Embargo can be enabled at the article or the file level. Possible values: article, file",
            "example" : "file",
            "enum" : [ "article", "file" ]
          },
          "embargo_title" : {
            "type" : "string",
            "description" : "Title for embargo",
            "example" : "File(s) under embargo"
          },
          "embargo_reason" : {
            "type" : "string",
            "description" : "Reason for setting embargo",
            "example" : ""
          },
          "embargo_options" : {
            "type" : "array",
            "description" : "List of embargo permissions to be associated with the article. The list must contain `id` and can also contain `group_ids`(a field that only applies to 'logged_in' permissions). The new list replaces old options in the database, and an empty list removes all permissions for this article. Administration permission has to be set up alone but logged in and IP range permissions can be set up together.",
            "example" : [ {
              "id" : 1321
            }, {
              "id" : 3345
            }, {
              "id" : 54621,
              "group_ids" : [ 4332, 5433, 678 ]
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "x-tag" : "articles"
      },
      "ArticleConfidentiality" : {
        "type" : "object",
        "properties" : {
          "is_confidential" : {
            "type" : "boolean",
            "description" : "True if article is confidential",
            "example" : true
          },
          "reason" : {
            "type" : "string",
            "description" : "Reason for confidentiality",
            "example" : "need to"
          }
        },
        "x-tag" : "articles"
      },
      "CustomArticleFieldAdd" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Custom  metadata name",
            "example" : "key"
          },
          "value" : {
            "type" : "object",
            "description" : "Custom metadata value",
            "example" : "value"
          }
        },
        "x-tag" : "articles"
      },
      "CustomArticleField" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "Custom  metadata name",
            "example" : "key"
          },
          "value" : {
            "type" : "string",
            "description" : "Custom metadata value",
            "example" : "value"
          }
        },
        "x-tag" : "articles"
      },
      "PublicFile" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "File id",
            "format" : "int64",
            "example" : 3000002
          },
          "name" : {
            "type" : "string",
            "description" : "File name",
            "example" : "test.xls"
          },
          "size" : {
            "type" : "integer",
            "description" : "File size",
            "format" : "int64",
            "example" : 14848
          },
          "is_link_only" : {
            "type" : "boolean",
            "description" : "True if file is hosted somewhere else",
            "example" : false
          },
          "download_url" : {
            "type" : "string",
            "description" : "Url for file download",
            "format" : "url",
            "example" : "https://ndownloader.figshare.com/files/3000002"
          },
          "supplied_md5" : {
            "type" : "string",
            "description" : "File supplied md5",
            "example" : "043a51806d646e88cafbf19e7b82846f"
          },
          "computed_md5" : {
            "type" : "string",
            "description" : "File computed md5",
            "example" : "043a51806d646e88cafbf19e7b82846f"
          }
        },
        "x-tag" : "common"
      },
      "PrivateFile" : {
        "properties" : {
          "viewer_type" : {
            "type" : "string",
            "description" : "File viewer type"
          },
          "preview_state" : {
            "type" : "string",
            "description" : "File preview state",
            "example" : "preview not available"
          },
          "upload_url" : {
            "type" : "string",
            "description" : "Upload url for file",
            "format" : "url",
            "example" : "https://uploads.figshare.com"
          },
          "upload_token" : {
            "type" : "string",
            "description" : "Token for file upload",
            "example" : "9dfc5fe3-d617-4d93-ac11-8afe7e984a4b"
          },
          "id" : {
            "type" : "integer",
            "description" : "File id",
            "format" : "int64",
            "example" : 3000002
          },
          "name" : {
            "type" : "string",
            "description" : "File name",
            "example" : "test.xls"
          },
          "size" : {
            "type" : "integer",
            "description" : "File size",
            "format" : "int64",
            "example" : 14848
          },
          "is_link_only" : {
            "type" : "boolean",
            "description" : "True if file is hosted somewhere else",
            "example" : false
          },
          "download_url" : {
            "type" : "string",
            "description" : "Url for file download",
            "format" : "url",
            "example" : "https://ndownloader.figshare.com/files/3000002"
          },
          "supplied_md5" : {
            "type" : "string",
            "description" : "File supplied md5",
            "example" : "043a51806d646e88cafbf19e7b82846f"
          },
          "computed_md5" : {
            "type" : "string",
            "description" : "File computed md5",
            "example" : "043a51806d646e88cafbf19e7b82846f"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/PublicFile"
        } ],
        "x-tag" : "common"
      },
      "Author" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Author id",
            "format" : "int64",
            "example" : 97657
          },
          "full_name" : {
            "type" : "string",
            "description" : "Author full name",
            "example" : "John Doe"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "True if author has published items",
            "example" : false
          },
          "url_name" : {
            "type" : "string",
            "description" : "Author url name",
            "example" : "John_Doe"
          },
          "orcid_id" : {
            "type" : "string",
            "description" : "Author Orcid",
            "example" : "1234-5678-9123-1234"
          }
        },
        "x-tag" : "authors"
      },
      "AuthorComplete" : {
        "properties" : {
          "institution_id" : {
            "type" : "integer",
            "description" : "Institution id",
            "format" : "int64"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Group id",
            "format" : "int64"
          },
          "first_name" : {
            "type" : "string",
            "description" : "First Name"
          },
          "last_name" : {
            "type" : "string",
            "description" : "Last Name"
          },
          "is_public" : {
            "type" : "integer",
            "description" : "if 1 then the author has published items",
            "format" : "int64"
          },
          "job_title" : {
            "type" : "string",
            "description" : "Job title"
          },
          "id" : {
            "type" : "integer",
            "description" : "Author id",
            "format" : "int64",
            "example" : 97657
          },
          "full_name" : {
            "type" : "string",
            "description" : "Author full name",
            "example" : "John Doe"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "True if author has published items",
            "example" : false
          },
          "url_name" : {
            "type" : "string",
            "description" : "Author url name",
            "example" : "John_Doe"
          },
          "orcid_id" : {
            "type" : "string",
            "description" : "Author Orcid",
            "example" : "1234-5678-9123-1234"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Author"
        } ],
        "x-tag" : "authors"
      },
      "Account" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Account id",
            "format" : "int64",
            "example" : 1495682
          },
          "first_name" : {
            "type" : "string",
            "description" : "First Name",
            "example" : "Doe"
          },
          "last_name" : {
            "type" : "string",
            "description" : "Last Name",
            "example" : "John"
          },
          "used_quota_private" : {
            "type" : "integer",
            "description" : "Account used private quota",
            "format" : "int64",
            "example" : 0
          },
          "modified_date" : {
            "type" : "string",
            "description" : "Date of last account modification",
            "example" : "2018-05-22T04:04:04"
          },
          "used_quota" : {
            "type" : "integer",
            "description" : "Account total used quota",
            "format" : "int64",
            "example" : 0
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when account was created",
            "example" : "2018-05-22T04:04:04"
          },
          "quota" : {
            "type" : "integer",
            "description" : "Account quota",
            "format" : "int64",
            "example" : 0
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Account group id",
            "format" : "int64",
            "example" : 0
          },
          "institution_user_id" : {
            "type" : "string",
            "description" : "Account institution user id",
            "example" : "djohn42"
          },
          "institution_id" : {
            "type" : "integer",
            "description" : "Account institution",
            "format" : "int64",
            "example" : 1
          },
          "email" : {
            "type" : "string",
            "description" : "User email",
            "example" : "user@domain.com"
          },
          "used_quota_public" : {
            "type" : "integer",
            "description" : "Account public used quota",
            "format" : "int64",
            "example" : 0
          },
          "pending_quota_request" : {
            "type" : "boolean",
            "description" : "True if a quota request is pending",
            "example" : true
          },
          "active" : {
            "type" : "integer",
            "description" : "Account activity status",
            "format" : "int64",
            "example" : 0
          },
          "maximum_file_size" : {
            "type" : "integer",
            "description" : "Maximum upload size for account",
            "format" : "int64",
            "example" : 0
          }
        },
        "x-tag" : "other"
      },
      "ShortAccount" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Account id",
            "format" : "int64",
            "example" : 1495682
          },
          "first_name" : {
            "type" : "string",
            "description" : "First Name",
            "example" : "Doe"
          },
          "last_name" : {
            "type" : "string",
            "description" : "Last Name",
            "example" : "John"
          },
          "institution_id" : {
            "type" : "integer",
            "description" : "Account institution",
            "format" : "int64",
            "example" : 1
          },
          "email" : {
            "type" : "string",
            "description" : "User email",
            "example" : "user@domain.com"
          },
          "active" : {
            "type" : "integer",
            "description" : "Account activity status",
            "format" : "int64",
            "example" : 0
          },
          "institution_user_id" : {
            "type" : "string",
            "description" : "Account institution user id",
            "example" : "1"
          },
          "quota" : {
            "type" : "integer",
            "description" : "Total storage available to account, in bytes",
            "format" : "int64",
            "example" : 1074000000
          },
          "used_quota" : {
            "type" : "integer",
            "description" : "Storage used by the account, in bytes",
            "format" : "int64",
            "example" : 1074000000
          },
          "user_id" : {
            "type" : "integer",
            "description" : "User id associated with account, useful for example for adding the account as an author to an item",
            "format" : "int64",
            "example" : 1000001
          },
          "orcid_id" : {
            "type" : "string",
            "description" : "ORCID iD associated to account",
            "example" : "0000-0001-2345-6789"
          }
        },
        "x-tag" : "other"
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "User id",
            "format" : "int64",
            "example" : 1495682
          },
          "first_name" : {
            "type" : "string",
            "description" : "First Name",
            "example" : "Doe"
          },
          "last_name" : {
            "type" : "string",
            "description" : "Last Name",
            "example" : "John"
          },
          "name" : {
            "type" : "string",
            "description" : "Full Name",
            "example" : "John Doe"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "Account activity status",
            "example" : true
          },
          "url_name" : {
            "type" : "string",
            "description" : "Name that appears in website url",
            "example" : "John_Doe"
          },
          "is_public" : {
            "type" : "boolean",
            "description" : "Account public status",
            "example" : true
          },
          "job_title" : {
            "type" : "string",
            "description" : "User Job title",
            "example" : "programmer"
          },
          "orcid_id" : {
            "type" : "string",
            "description" : "Orcid associated to this User",
            "example" : "1234-5678-9123-1234"
          }
        },
        "x-tag" : "other"
      },
      "ArticleDOI" : {
        "type" : "object",
        "properties" : {
          "doi" : {
            "type" : "string",
            "description" : "Reserved DOI",
            "example" : "10.5072/FK2.FIGSHARE.20345"
          }
        },
        "x-tag" : "articles"
      },
      "ArticleHandle" : {
        "type" : "object",
        "properties" : {
          "handle" : {
            "type" : "string",
            "description" : "Reserved Handle",
            "example" : "11172/FK2.FIGSHARE.20345"
          }
        },
        "x-tag" : "articles"
      },
      "CollectionDOI" : {
        "type" : "object",
        "properties" : {
          "doi" : {
            "type" : "string",
            "description" : "Reserved DOI",
            "example" : "10.5072/FK2.FIGSHARE.20345"
          }
        },
        "x-tag" : "collections"
      },
      "CollectionHandle" : {
        "type" : "object",
        "properties" : {
          "handle" : {
            "type" : "string",
            "description" : "Reserved Handle",
            "example" : "11172/FK2.FIGSHARE.20345"
          }
        },
        "x-tag" : "collections"
      },
      "AuthorsCreator" : {
        "required" : [ "authors" ],
        "type" : "object",
        "properties" : {
          "authors" : {
            "type" : "array",
            "description" : "List of authors to be associated with the article. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.",
            "example" : [ {
              "id" : 12121
            }, {
              "id" : 34345
            }, {
              "name" : "John Doe"
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          }
        },
        "x-tag" : "articles"
      },
      "CategoriesCreator" : {
        "required" : [ "categories" ],
        "type" : "object",
        "properties" : {
          "categories" : {
            "type" : "array",
            "description" : "List of category ids",
            "example" : [ 1, 10, 11 ],
            "items" : {
              "type" : "integer",
              "description" : "Id of category",
              "format" : "int64"
            }
          }
        },
        "x-tag" : "articles"
      },
      "ArticlesCreator" : {
        "required" : [ "articles" ],
        "type" : "object",
        "properties" : {
          "articles" : {
            "type" : "array",
            "description" : "List of article ids",
            "example" : [ 2000003, 2000004 ],
            "items" : {
              "type" : "integer",
              "description" : "Id of article",
              "format" : "int64"
            }
          }
        },
        "x-tag" : "articles"
      },
      "PrivateLinkCreator" : {
        "type" : "object",
        "properties" : {
          "expires_date" : {
            "type" : "string",
            "description" : "Date when this private link should expire - optional. By default private links expire in 365 days.",
            "example" : "2018-02-22 22:22:22"
          },
          "read_only" : {
            "type" : "boolean",
            "description" : "Optional, default true. Set to false to give private link users editing rights for this collection.",
            "example" : true
          }
        },
        "x-tag" : "articles"
      },
      "CollectionPrivateLinkCreator" : {
        "type" : "object",
        "properties" : {
          "expires_date" : {
            "type" : "string",
            "description" : "Date when this private link should expire - optional. By default private links expire in 365 days.",
            "example" : "2018-02-22 22:22:22"
          },
          "read_only" : {
            "type" : "boolean",
            "description" : "Optional, default true. Set to false to give private link users editing rights for this collection.",
            "example" : true
          }
        },
        "x-tag" : "collections"
      },
      "PrivateLink" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string",
            "description" : "Private link id",
            "example" : "0cfb0dbeac92df445df4aba45f63fdc85fa0b9a888b64e157ce3c93b576aa300fb3621ef3a219515dd482"
          },
          "is_active" : {
            "type" : "boolean",
            "description" : "True if private link is active",
            "example" : true
          },
          "expires_date" : {
            "type" : "string",
            "description" : "Date when link will expire",
            "example" : "2015-07-03T00:00:00"
          }
        },
        "x-tag" : "articles"
      },
      "FileCreator" : {
        "type" : "object",
        "properties" : {
          "link" : {
            "type" : "string",
            "description" : "Url for an existing file that will not be uploaded to Figshare",
            "example" : "http://figshare.com/file.txt"
          },
          "md5" : {
            "type" : "string",
            "description" : "MD5 sum pre-computed on client side.",
            "example" : "6c16e6e7d7587bd078e5117dda01d565"
          },
          "name" : {
            "type" : "string",
            "description" : "File name including the extension; can be omitted only for linked files.",
            "example" : "test.py"
          },
          "size" : {
            "type" : "integer",
            "description" : "File size in bytes; can be omitted only for linked files.",
            "format" : "int64",
            "example" : 70
          }
        },
        "x-tag" : "articles"
      },
      "FileId" : {
        "type" : "object",
        "properties" : {
          "file_id" : {
            "type" : "integer",
            "description" : "File ID",
            "format" : "int64",
            "example" : 123
          }
        },
        "x-tag" : "articles"
      },
      "UploadInfo" : {
        "type" : "object",
        "properties" : {
          "token" : {
            "type" : "string",
            "description" : "token received after initializing a file upload",
            "example" : "693a2802-cd61-430d-b89f-507f0f6d8fd3"
          },
          "md5" : {
            "type" : "string",
            "description" : "md5 provided on upload initialization",
            "example" : "3a7f451c068f4e13260034c611378140"
          },
          "size" : {
            "type" : "integer",
            "description" : "size of file in bytes",
            "format" : "int64",
            "example" : 70
          },
          "name" : {
            "type" : "string",
            "description" : "name of file on upload server",
            "example" : "3000017/test.py"
          },
          "status" : {
            "type" : "string",
            "description" : "Upload status",
            "enum" : [ "PENDING", "COMPLETED", "ABORTED" ]
          },
          "parts" : {
            "type" : "array",
            "description" : "Uploads parts",
            "items" : {
              "$ref" : "#/components/schemas/UploadFilePart"
            }
          }
        },
        "x-tag" : "upload"
      },
      "UploadFilePart" : {
        "type" : "object",
        "properties" : {
          "partNo" : {
            "type" : "integer",
            "description" : "File part id",
            "format" : "int64",
            "example" : 1
          },
          "startOffset" : {
            "type" : "integer",
            "description" : "Indexes on byte range. zero-based and inclusive",
            "format" : "int64",
            "example" : 0
          },
          "endOffset" : {
            "type" : "integer",
            "description" : "Indexes on byte range. zero-based and inclusive",
            "format" : "int64",
            "example" : 69
          },
          "status" : {
            "type" : "string",
            "description" : "part status",
            "enum" : [ "PENDING", "COMPLETE" ]
          },
          "locked" : {
            "type" : "boolean",
            "description" : "When a part is being uploaded it is being locked, by setting the locked flag to true. No changes/uploads can happen on this part from other requests."
          }
        },
        "x-tag" : "upload"
      },
      "Collection" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Collection id",
            "format" : "int64",
            "example" : 123
          },
          "title" : {
            "type" : "string",
            "description" : "Collection title",
            "example" : "Sample collection"
          },
          "doi" : {
            "type" : "string",
            "description" : "Collection DOI",
            "example" : "10.6084/m9.figshare.123"
          },
          "handle" : {
            "type" : "string",
            "description" : "Collection Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "https://api.figshare.com/v2/collections/123"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          }
        },
        "x-tag" : "collections"
      },
      "CollectionComplete" : {
        "properties" : {
          "funding" : {
            "type" : "array",
            "description" : "Full Collection funding information",
            "items" : {
              "$ref" : "#/components/schemas/FundingInformation"
            }
          },
          "resource_id" : {
            "type" : "string",
            "description" : "Collection resource id",
            "example" : ""
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Collection resource doi",
            "example" : "10.6084/m9.figshare.123"
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Collection resource title",
            "example" : "test"
          },
          "resource_link" : {
            "type" : "string",
            "description" : "Collection resource link",
            "example" : "http://figshare.com"
          },
          "resource_version" : {
            "type" : "integer",
            "description" : "Collection resource version",
            "format" : "int64",
            "example" : 0
          },
          "version" : {
            "type" : "integer",
            "description" : "Collection version",
            "format" : "int64",
            "example" : 1
          },
          "description" : {
            "type" : "string",
            "description" : "Collection description",
            "example" : "description"
          },
          "categories" : {
            "type" : "array",
            "description" : "List of collection categories",
            "items" : {
              "$ref" : "#/components/schemas/Category"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of collection references",
            "items" : {
              "type" : "string",
              "format" : "url"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of collection tags",
            "example" : [ "t1", "t2" ],
            "items" : {
              "type" : "string"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of collection authors",
            "items" : {
              "$ref" : "#/components/schemas/Author"
            }
          },
          "institution_id" : {
            "type" : "integer",
            "description" : "Collection institution",
            "format" : "int64",
            "example" : 1
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Collection group",
            "format" : "int64",
            "example" : 1
          },
          "articles_count" : {
            "type" : "integer",
            "description" : "Number of articles in collection",
            "format" : "int64",
            "example" : 1
          },
          "public" : {
            "type" : "boolean",
            "description" : "True if collection is published",
            "example" : true
          },
          "citation" : {
            "type" : "string",
            "description" : "Collection citation",
            "example" : "citation"
          },
          "custom_fields" : {
            "type" : "array",
            "description" : "Collection custom fields",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleField"
            }
          },
          "modified_date" : {
            "type" : "string",
            "description" : "Date when collection was last modified",
            "example" : "2017-05-15T15:12:26Z"
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when collection was created",
            "example" : "2017-05-15T15:12:26Z"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/Timeline"
          },
          "id" : {
            "type" : "integer",
            "description" : "Collection id",
            "format" : "int64",
            "example" : 123
          },
          "title" : {
            "type" : "string",
            "description" : "Collection title",
            "example" : "Sample collection"
          },
          "doi" : {
            "type" : "string",
            "description" : "Collection DOI",
            "example" : "10.6084/m9.figshare.123"
          },
          "handle" : {
            "type" : "string",
            "description" : "Collection Handle",
            "example" : "111184/figshare.1234"
          },
          "url" : {
            "type" : "string",
            "description" : "Api endpoint",
            "example" : "https://api.figshare.com/v2/collections/123"
          }
        },
        "allOf" : [ {
          "$ref" : "#/components/schemas/Collection"
        } ],
        "x-tag" : "collections"
      },
      "CollectionCreate" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "funding" : {
            "type" : "string",
            "description" : "Grant number or funding authority",
            "default" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "Title of collection",
            "example" : "Test collection title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "The collection description. In a publisher case, usually this is the remote collection description",
            "example" : "Test description of article",
            "default" : ""
          },
          "articles" : {
            "type" : "array",
            "description" : "List of articles to be associated with the collection",
            "example" : [ 2000001, 2000005 ],
            "items" : {
              "type" : "integer"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of authors to be associated with the collection. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.",
            "example" : [ {
              "name" : "John Doe"
            }, {
              "id" : 20005
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "categories" : {
            "type" : "array",
            "description" : "List of category ids to be associated with the collection(e.g [1, 23, 33, 66])",
            "example" : [ 1, 10, 11 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "categories_by_source_id" : {
            "type" : "array",
            "description" : "List of category source ids to be associated with the collection, supersedes the categories property",
            "example" : [ "300204", "400207" ],
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags to be associated with the collection. Keywords can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "keywords" : {
            "type" : "array",
            "description" : "List of tags to be associated with the collection. Tags can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of links to be associated with the collection (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
            "example" : [ "http://figshare.com", "http://api.figshare.com" ],
            "items" : {
              "type" : "string",
              "format" : "link"
            }
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the collection",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          },
          "doi" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "handle" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "resource_id" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article id"
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
            "default" : ""
          },
          "resource_link" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article link"
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article title.",
            "default" : ""
          },
          "resource_version" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article version"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups",
            "format" : "int64"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/TimelineUpdate"
          }
        },
        "x-tag" : "collections"
      },
      "CollectionUpdate" : {
        "type" : "object",
        "properties" : {
          "funding" : {
            "type" : "string",
            "description" : "Grant number or funding authority",
            "default" : ""
          },
          "funding_list" : {
            "type" : "array",
            "description" : "Funding creation / update items",
            "items" : {
              "$ref" : "#/components/schemas/FundingCreate"
            }
          },
          "title" : {
            "maxLength" : 1000,
            "minLength" : 3,
            "type" : "string",
            "description" : "Title of collection",
            "example" : "Test collection title"
          },
          "description" : {
            "maxLength" : 10000,
            "type" : "string",
            "description" : "The collection description. In a publisher case, usually this is the remote collection description",
            "example" : "Test description of collection",
            "default" : ""
          },
          "articles" : {
            "type" : "array",
            "description" : "List of articles to be associated with the collection",
            "example" : [ 2000001, 2000005 ],
            "items" : {
              "type" : "integer"
            }
          },
          "authors" : {
            "type" : "array",
            "description" : "List of authors to be associated with the collection. The list can contain the following fields: id, name, first_name, last_name, email, orcid_id. If an id is supplied, it will take priority and everything else will be ignored. No more than 10 authors. For adding more authors use the specific authors endpoint.",
            "example" : [ {
              "name" : "John Doe"
            }, {
              "id" : 20005
            } ],
            "items" : {
              "type" : "object",
              "properties" : { }
            }
          },
          "categories" : {
            "type" : "array",
            "description" : "List of category ids to be associated with the collection (e.g [1, 23, 33, 66])",
            "example" : [ 1, 10, 11 ],
            "items" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "categories_by_source_id" : {
            "type" : "array",
            "description" : "List of category source ids to be associated with the article, supersedes the categories property",
            "example" : [ "300204", "400207" ],
            "items" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "description" : "List of tags to be associated with the collection. Keywords can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "keywords" : {
            "type" : "array",
            "description" : "List of tags to be associated with the collection. Tags can be used instead",
            "example" : [ "tag1", "tag2" ],
            "items" : {
              "type" : "string"
            }
          },
          "references" : {
            "type" : "array",
            "description" : "List of links to be associated with the collection (e.g [\"http://link1\", \"http://link2\", \"http://link3\"])",
            "example" : [ "http://figshare.com", "http://api.figshare.com" ],
            "items" : {
              "type" : "string",
              "format" : "link"
            }
          },
          "custom_fields" : {
            "type" : "object",
            "properties" : { },
            "description" : "List of key, values pairs to be associated with the collection",
            "example" : {
              "defined_key" : "value for it"
            }
          },
          "custom_fields_list" : {
            "type" : "array",
            "description" : "List of custom fields values, supersedes custom_fields parameter",
            "items" : {
              "$ref" : "#/components/schemas/CustomArticleFieldAdd"
            }
          },
          "doi" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting DOIs. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "handle" : {
            "type" : "string",
            "description" : "Not applicable for regular users. In an institutional case, make sure your group supports setting Handles. This setting is applied by figshare via opening a ticket through our support/helpdesk system.",
            "default" : ""
          },
          "resource_id" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article id"
          },
          "resource_doi" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article DOI.",
            "default" : ""
          },
          "resource_link" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article link"
          },
          "resource_title" : {
            "type" : "string",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article title.",
            "default" : ""
          },
          "resource_version" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. In a publisher case, this is the publisher article version"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "Not applicable to regular users. This field is reserved to institutions/publishers with access to assign to specific groups",
            "format" : "int64"
          },
          "timeline" : {
            "$ref" : "#/components/schemas/TimelineUpdate"
          }
        },
        "x-tag" : "collections"
      },
      "ConfidentialityCreator" : {
        "type" : "object",
        "properties" : {
          "reason" : {
            "type" : "string",
            "description" : "Reason for confidentiality"
          }
        }
      },
      "Location" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Url for item",
            "format" : "url"
          }
        },
        "x-tag" : "common"
      },
      "LocationWarnings" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "description" : "Url for entity",
            "format" : "url"
          },
          "warnings" : {
            "type" : "array",
            "description" : "Issues encountered during the operation",
            "items" : {
              "type" : "string"
            }
          }
        },
        "x-tag" : "common"
      },
      "FundingInformation" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "Funding id",
            "format" : "int64",
            "example" : 1
          },
          "title" : {
            "type" : "string",
            "description" : "The funding name",
            "example" : "Scholarly funding"
          },
          "grant_code" : {
            "type" : "string",
            "description" : "The grant code"
          },
          "funder_name" : {
            "type" : "string",
            "description" : "Funder's name"
          },
          "is_user_defined" : {
            "type" : "boolean",
            "description" : "Return whether the grant has been introduced manually"
          },
          "url" : {
            "type" : "string",
            "description" : "The grant url",
            "format" : "url",
            "example" : "https://app.dimensions.ai/details/grant/1"
          }
        },
        "x-tag" : "funding"
      },
      "FundingSearch" : {
        "type" : "object",
        "properties" : {
          "search_for" : {
            "type" : "string",
            "description" : "Search term"
          }
        },
        "x-tag" : "funding"
      },
      "FundingCreate" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "A funding ID as returned by the Funding Search endpoint",
            "format" : "int64"
          },
          "title" : {
            "type" : "string",
            "description" : "The title of the new user created funding"
          }
        },
        "x-tag" : "funding"
      },
      "AccountReport" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "description" : "A unique ID for the AccountRecord",
            "format" : "int64"
          },
          "account_id" : {
            "type" : "integer",
            "description" : "The ID of the account which generated this report.",
            "format" : "int64"
          },
          "created_date" : {
            "type" : "string",
            "description" : "Date when the AccountReport was requested",
            "example" : "2017-05-15T15:12:26Z"
          },
          "status" : {
            "type" : "string",
            "description" : "Status of the report",
            "enum" : [ "missing", "pending", "done" ]
          },
          "download_url" : {
            "type" : "string",
            "description" : "The download link for the generated XLSX",
            "format" : "url",
            "example" : "https://some.com/storage/path/123/report-456.xlsx"
          },
          "group_id" : {
            "type" : "integer",
            "description" : "The group ID that was used to filter the report, if any.",
            "format" : "int64"
          }
        }
      },
      "ItemType" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "minimum" : 1,
            "type" : "integer",
            "description" : "The ID of the item type.",
            "format" : "int64"
          },
          "name" : {
            "type" : "string",
            "description" : "The name of the item type",
            "example" : "journal contribution"
          },
          "string_id" : {
            "type" : "string",
            "description" : "The string identifier of the item type.",
            "example" : "journal_contribution"
          },
          "icon" : {
            "type" : "string",
            "description" : "The string identifying the icon of the item type.",
            "example" : "paper"
          },
          "public_description" : {
            "type" : "string",
            "description" : "The description of the item type.",
            "example" : "This is the description of an item type"
          },
          "is_selectable" : {
            "maximum" : 1,
            "minimum" : 0,
            "type" : "integer",
            "description" : "Filter by the selectable status",
            "format" : "int64"
          },
          "url_name" : {
            "type" : "string",
            "description" : "The URL name of the item type.",
            "example" : "journal_contribution"
          }
        }
      },
      "items_upload_body" : {
        "properties" : {
          "external_file" : {
            "type" : "string",
            "description" : "CSV file to be uploaded",
            "format" : "binary"
          }
        }
      },
      "hrfeed_upload_body" : {
        "properties" : {
          "hrfeed" : {
            "type" : "string",
            "description" : "You can find an example in the Hr Feed section",
            "format" : "binary"
          }
        }
      }
    },
    "securitySchemes" : {
      "OAuth2" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://figshare.com/account/applications/authorize",
            "tokenUrl" : "https://api.figshare.com/v2/token",
            "scopes" : {
              "all" : "Grants all access"
            }
          }
        }
      }
    }
  },
  "x-additional-descriptions" : [ {
    "title" : "Upload files",
    "position" : "bottom",
    "subsections" : [ {
      "title" : "Steps to upload file",
      "content" : "description_upload_steps"
    }, {
      "title" : "Uploads API",
      "content" : "description_upload_api"
    }, {
      "title" : "Parts API",
      "content" : "description_upload_parts_api"
    }, {
      "title" : "Example Upload on figshare",
      "content" : "description_upload_example"
    }, {
      "title" : "Output of Script",
      "content" : "description_upload_output"
    }, {
      "title" : "Upload Bash Script",
      "content" : "description_upload_bash"
    }, {
      "title" : "Upload S3 File to Figshare",
      "content" : "description_upload_from_s3"
    } ]
  }, {
    "title" : "Search",
    "position" : "bottom",
    "subsections" : [ {
      "title" : "How to find data on figshare",
      "content" : "description_search_intro"
    }, {
      "title" : "Search operators",
      "content" : "description_search_operators"
    }, {
      "title" : "Searchable attributes",
      "content" : "description_search_attributes"
    }, {
      "title" : "Quick search",
      "content" : "description_search_quick"
    }, {
      "title" : "Advanced search",
      "content" : "description_search_advanced"
    }, {
      "title" : "Combined field search",
      "content" : "description_search_combined"
    }, {
      "title" : "Complex searches",
      "content" : "description_search_complex"
    } ]
  }, {
    "title" : "Stats",
    "position" : "bottom",
    "subsections" : [ {
      "title" : "Stats service",
      "subsections" : [ {
        "title" : "Intro",
        "content" : "description_stats_service_intro"
      }, {
        "title" : "Authentication",
        "content" : "description_stats_service_auth"
      }, {
        "title" : "Errors",
        "content" : "description_stats_service_errors"
      }, {
        "title" : "Endpoints",
        "content" : "description_stats_service_endpoints"
      } ]
    }, {
      "title" : "Breakdown",
      "subsections" : [ {
        "title" : "Endpoints for retrieving a breakdown",
        "content" : "description_stats_breakdown_endpoints"
      }, {
        "title" : "Authorization",
        "content" : "description_stats_breakdown_auth"
      }, {
        "title" : "Endpoint format",
        "content" : "description_stats_breakdown_format"
      }, {
        "title" : "Request parameters",
        "content" : "description_stats_breakdown_params"
      }, {
        "title" : "Examples",
        "content" : "description_stats_breakdown_examples"
      } ]
    }, {
      "title" : "Timeline",
      "subsections" : [ {
        "title" : "Endpoints for retrieving a timeline",
        "content" : "description_stats_timeline_endpoints"
      }, {
        "title" : "Authorization",
        "content" : "description_stats_timeline_auth"
      }, {
        "title" : "Endpoint format",
        "content" : "description_stats_timeline_format"
      }, {
        "title" : "Request parameters",
        "content" : "description_stats_timeline_params"
      }, {
        "title" : "Examples",
        "content" : "description_stats_timeline_examples"
      } ]
    }, {
      "title" : "Tops",
      "subsections" : [ {
        "title" : "Endpoints for retrieving tops",
        "content" : "description_stats_tops_endpoints"
      }, {
        "title" : "Authorization",
        "content" : "description_stats_tops_auth"
      }, {
        "title" : "Endpoint format",
        "content" : "description_stats_tops_format"
      }, {
        "title" : "Request parameters",
        "content" : "description_stats_tops_params"
      }, {
        "title" : "Examples",
        "content" : "description_stats_tops_examples"
      } ]
    }, {
      "title" : "Totals",
      "subsections" : [ {
        "title" : "Endpoints for retrieving totals",
        "content" : "description_stats_totals_endpoints"
      }, {
        "title" : "Authorization",
        "content" : "description_stats_totals_auth"
      }, {
        "title" : "Endpoint format",
        "content" : "description_stats_totals_format"
      }, {
        "title" : "Examples",
        "content" : "description_stats_totals_examples"
      } ]
    }, {
      "title" : "Count Articles",
      "subsections" : [ {
        "title" : "Endpoint for retrieving counts",
        "content" : "description_stats_count_endpoints"
      }, {
        "title" : "Authorization",
        "content" : "description_stats_count_auth"
      }, {
        "title" : "Endpoint format",
        "content" : "description_stats_count_format"
      }, {
        "title" : "Example",
        "content" : "description_stats_count_examples"
      } ]
    } ]
  }, {
    "title" : "OAI PMH",
    "position" : "bottom",
    "subsections" : [ {
      "title" : "OAI-PMH",
      "content" : "description_oai_pmh"
    }, {
      "title" : "Base URL",
      "content" : "description_oai_baseurl"
    }, {
      "title" : "Item equals Article",
      "content" : "description_oai_itemarticle"
    }, {
      "title" : "Metadata formats",
      "content" : "description_oai_metadata"
    }, {
      "title" : "Datestamps",
      "content" : "description_oai_datestamp"
    }, {
      "title" : "Sets",
      "content" : "description_oai_sets"
    }, {
      "title" : "Update schedule",
      "content" : "description_oai_update_schedule"
    }, {
      "title" : "Pagination and Resumption Token Expiration",
      "content" : "description_oai_pagination"
    }, {
      "title" : "Rate limit",
      "content" : "description_oai_ratelimit"
    }, {
      "title" : "Future development",
      "content" : "description_oai_futuredev"
    }, {
      "title" : "Some examples",
      "content" : "description_oai_someexamples"
    } ]
  }, {
    "title" : "HR Feed",
    "position" : "bottom",
    "subsections" : [ {
      "title" : "HR Feed Private Endpoint",
      "content" : "description_hrfeed_endpoint"
    }, {
      "title" : "HR Feed examples",
      "subsections" : [ {
        "title" : "Python",
        "content" : "description_hrfeed_examples_python"
      }, {
        "title" : "Java",
        "content" : "description_hrfeed_examples_java"
      }, {
        "title" : "C Sharp",
        "content" : "description_hrfeed_examples_csharp"
      }, {
        "title" : "Curl",
        "content" : "description_hrfeed_examples_curl"
      } ]
    }, {
      "title" : "Response",
      "content" : "description_hrfeed_response"
    }, {
      "title" : "Errors",
      "content" : "description_hrfeed_errors"
    }, {
      "title" : "Notes",
      "content" : "description_hrfeed_notes"
    } ]
  }, {
    "title" : "Custom Fields",
    "position" : "bottom",
    "subsections" : [ {
      "title" : "Custom Fields Private Endpoints",
      "content" : "description_custom_fields_endpoint"
    }, {
      "title" : "Custom Fields examples",
      "subsections" : [ {
        "title" : "Python",
        "content" : "description_custom_fields_examples_python"
      }, {
        "title" : "Java",
        "content" : "description_custom_fields_examples_java"
      }, {
        "title" : "C Sharp",
        "content" : "description_custom_fields_examples_csharp"
      }, {
        "title" : "Curl",
        "content" : "description_custom_fields_examples_curl"
      } ]
    }, {
      "title" : "Response",
      "content" : "description_custom_fields_response"
    }, {
      "title" : "Errors",
      "content" : "description_custom_fields_errors"
    }, {
      "title" : "Notes",
      "content" : "description_custom_fields_notes"
    } ]
  }, {
    "title" : "figshare Documentation",
    "position" : "top",
    "subsections" : [ {
      "title" : "Introduction",
      "content" : "description_intro"
    }, {
      "title" : "OAuth",
      "subsections" : [ {
        "title" : "Intro",
        "content" : "description_oauth_intro"
      }, {
        "title" : "Quick guide",
        "content" : "description_oauth_quick"
      }, {
        "title" : "Scope",
        "content" : "description_oauth_scope"
      }, {
        "title" : "Grant Types",
        "content" : "description_oauth_grant"
      } ]
    }, {
      "title" : "API description",
      "subsections" : [ {
        "title" : "Feature list",
        "content" : "description_api_features"
      }, {
        "title" : "Sending parameters",
        "content" : "description_api_parameters"
      }, {
        "title" : "Resource representations",
        "content" : "description_api_resourcerepresentation"
      }, {
        "title" : "Authentication",
        "content" : "description_api_auth"
      }, {
        "title" : "Errors",
        "content" : "description_api_errors"
      }, {
        "title" : "Searching filtering and pagination",
        "content" : "description_api_search"
      }, {
        "title" : "Rate limiting",
        "content" : "description_api_ratelimit"
      }, {
        "title" : "Conditional requests",
        "content" : "description_api_requests"
      }, {
        "title" : "CORS policy",
        "content" : "description_api_cors"
      }, {
        "title" : "Impersonation",
        "content" : "description_api_impersonation"
      } ]
    } ]
  } ],
  "x-original-swagger-version" : "2.0"
}